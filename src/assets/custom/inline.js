var PaystackPop = (function () {
'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var baseConfig = {
  cookieTestUrl: 'https://legacy-staging.paystack.co/test-iframe/start.html',
  publishableKey: 'uFmz/uE/SDT6GupOrSEXIZXGByjQ0zFkPyc9LqKHFqnTI0WPN3JS5kQPo/j9or0TOXlqMQj2lzHn/UGsQT4XeQ==',
  publicKey: '-----BEGIN PUBLIC KEY-----' + '\r\n' + 'MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALhZs/7hP0g0+hrqTq0hFyGVxgco0NMx' + '\r\n' + 'ZD8nPS6ihxap0yNFjzdyUuZED6P4/aK9Ezl5ajEI9pcx5/1BrEE+F3kCAwEAAQ==' + '\r\n' + '-----END PUBLIC KEY-----',
  applePayVersion: 6,
  applePayValidateSessionPath: 'applepay/validate-session/',
  applePayChargePath: 'applepay/charge'
};

var devConfig = _extends({}, baseConfig, {
  checkoutUrl: 'http://localhost:8081/',
  paymentBaseUrl: 'https://legacy-staging.paystack.co/',
  paystackApiUrl: 'https://studio-api.paystack.co/',
  siteUrl: 'https://paystack.com',
  pusherKey: '1c7b262ee18455815893',
  pusherUrl: 'http://localhost:8081/static/vendor/pusher.min.js'
});

var stagingConfig = _extends({}, baseConfig, {
  checkoutUrl: 'https://checkout-studio.paystack.com/',
  paymentBaseUrl: 'https://legacy-staging.paystack.co/',
  paystackApiUrl: 'https://studio-api.paystack.co/',
  siteUrl: 'https://beta.paystack.com',
  pusherKey: '1c7b262ee18455815893',
  pusherUrl: 'https://checkout-studio.paystack.com/static/vendor/pusher.min.js'
});

var productionConfig = _extends({}, baseConfig, {
  checkoutUrl: 'https://checkout.paystack.com/',
  paymentBaseUrl: 'https://standard.paystack.co/',
  paystackApiUrl: 'https://api.paystack.co/',
  siteUrl: 'https://paystack.com',
  pusherKey: '8e4b9b7ca3418bd5cdc8',
  pusherUrl: 'https://checkout.paystack.com/static/vendor/pusher.min.js'
});

var configurations = {
  dev: devConfig,
  staging: stagingConfig,
  production: productionConfig

  /* eslint-disable */
};var config = configurations['staging'] || stagingConfig;

function randomId() {
  var text = '';
  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
  for (var i = 0; i < 5; i += 1) {
    text += possible.charAt(Math.floor(Math.random() * possible.length));
  }return text;
}

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function serialize(obj, prefix) {
  var queryString = [];
  Object.keys(obj).forEach(function (key) {
    var updatedKey = prefix ? prefix + '[' + key + ']' : key;
    var value = obj[updatedKey];
    queryString.push(value !== null && (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' ? serialize(value, updatedKey) : encodeURIComponent(key) + '=' + encodeURIComponent(value));
  });
  return queryString.join('&');
}

function parseResponse(message) {
  var action = message && typeof message == 'string' ? message.split(" ")[0] : null;
  var data = action ? message.split(' ').slice(2).join(' ') : null;
  return {
    action: action,
    data: data
  };
}

function similarObjects(o1, o2) {
  var equalKeys = Object.keys(o1).sort().join('') === Object.keys(o2).sort().join('');
  var equalValues = Object.values(o1).sort().join('') === Object.values(o2).sort().join('');
  return equalKeys && equalValues;
}

var _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/* eslint-env browser */
function getLastScript() {
  var scripts = document.getElementsByTagName('script');
  return scripts[scripts.length - 1];
}

function getSourceScript() {
  return document.currentScript || getLastScript();
}

function getDataAttributes() {
  var dataAttributes = [];
  var sourceScript = getSourceScript();
  if (sourceScript) {
    var attributes = Array.prototype.slice.call(sourceScript.attributes);
    dataAttributes = Object.keys(attributes).filter(function (key) {
      var element = attributes[key].nodeName;
      return element && element.indexOf('data') > -1;
    }).map(function (index) {
      return attributes[index].nodeName;
    });
  }  return dataAttributes;
}

function scriptCanUseDataAttributes() {
  var hasDataAttributes = getDataAttributes().length > 0;
  var hasParentForm = getSourceScript() && getSourceScript().parentElement.tagName === 'FORM';
  return hasDataAttributes && hasParentForm;
}
function getDataAttributesAsParameters() {
  function convertToCamelCase(value) {
    return value.replace(/-([a-z])/g, function (g) {
      return g[1].toUpperCase();
    });
  }

  function validateLazyParameters(parameters) {
    if (parameters.buttonId && !document.getElementById(parameters.buttonId)) {
      throw new Error('Please make sure the buttonId is an element available in the DOM');
    }

    var updatedParameters = _extends$1({}, parameters);
    updatedParameters.buttonText = parameters.buttonText || 'Pay';
    updatedParameters.buttonVariant = 'normal';
    updatedParameters.buttonWordmarkVariant = 'normal';

    var allowedVariants = ['normal', 'light'];
    if (parameters.buttonVariant && allowedVariants.indexOf(parameters.buttonVariant) > -1) {
      updatedParameters.buttonVariant = parameters.buttonVariant;
    }
    if (parameters.buttonWordmarkVariant && allowedVariants.indexOf(parameters.buttonWordmarkVariant) > -1) {
      updatedParameters.buttonWordmarkVariant = parameters.buttonWordmarkVariant;
    }

    return updatedParameters;
  }

  var parameters = {};
  var sourceScript = getSourceScript();
  var dataAttributes = getDataAttributes();
  dataAttributes.forEach(function (attribute) {
    var attributeValue = sourceScript.getAttribute(attribute);
    var attributeSplit = attribute.split('data-');
    var attributeName = convertToCamelCase(attributeSplit[1]);
    parameters[attributeName] = attributeValue;
  });

  return validateLazyParameters(parameters);
}

var secureByPaystack = "\n  <svg id=\"inline-button-wordmark\" width=\"137\" height=\"13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M.037 5.095l1.075-.135c-.011-.774-.025-1.944-.013-2.149C1.19 1.364 2.38.134 3.81.013 3.9.006 3.99.002 4.077 0a2.947 2.947 0 0 1 2.046.76c.574.509.95 1.26 1.008 2.007.015.192.01 1.491.01 2.257l1.096.163L8.2 11.44 4.093 12 0 11.346l.037-6.251zm4.106-.514l1.724.256c-.007-.933-.05-2.295-.26-2.654-.319-.545-.846-.867-1.443-.88h-.063c-.607.008-1.138.322-1.458.864-.222.378-.266 1.66-.265 2.637l1.765-.223zM18.228 10.108c-.576 0-1.064-.072-1.464-.216a2.864 2.864 0 0 1-.972-.6 2.552 2.552 0 0 1-.588-.864 4.067 4.067 0 0 1-.252-1.044h1.008c.032.256.088.5.168.732.08.224.204.424.372.6.168.168.388.304.66.408.28.096.636.144 1.068.144.28 0 .536-.036.768-.108.24-.08.448-.192.624-.336.176-.144.312-.316.408-.516.104-.2.156-.42.156-.66 0-.24-.032-.448-.096-.624a1.02 1.02 0 0 0-.336-.468 1.885 1.885 0 0 0-.636-.324 6.4 6.4 0 0 0-1.008-.228 8.79 8.79 0 0 1-1.212-.276 3.246 3.246 0 0 1-.9-.432 1.982 1.982 0 0 1-.564-.672c-.128-.272-.192-.6-.192-.984 0-.328.068-.632.204-.912.136-.288.324-.536.564-.744.248-.208.54-.372.876-.492.336-.12.708-.18 1.116-.18.864 0 1.548.204 2.052.612.512.4.812.984.9 1.752h-.936c-.104-.544-.316-.932-.636-1.164-.32-.24-.78-.36-1.38-.36-.592 0-1.04.132-1.344.396a1.255 1.255 0 0 0-.444.996c0 .208.024.396.072.564.056.16.156.3.3.42.152.12.36.228.624.324a6.72 6.72 0 0 0 1.068.228c.48.072.9.168 1.26.288.36.12.664.276.912.468s.432.428.552.708c.128.28.192.624.192 1.032 0 .36-.076.696-.228 1.008a2.472 2.472 0 0 1-.612.804c-.264.224-.58.4-.948.528-.36.128-.752.192-1.176.192zM25.355 10.108c-.44 0-.848-.076-1.224-.228a2.916 2.916 0 0 1-.96-.636 2.966 2.966 0 0 1-.636-1.008 3.77 3.77 0 0 1-.216-1.308v-.096c0-.472.072-.904.216-1.296.144-.4.344-.74.6-1.02.264-.288.576-.508.936-.66.36-.16.756-.24 1.188-.24.36 0 .708.06 1.044.18.344.112.648.292.912.54.264.248.472.572.624.972.16.392.24.868.24 1.428v.324h-4.728c.024.72.204 1.272.54 1.656.336.376.828.564 1.476.564.984 0 1.54-.364 1.668-1.092h.996c-.112.632-.408 1.112-.888 1.44-.48.32-1.076.48-1.788.48zm1.704-3.852c-.048-.648-.232-1.112-.552-1.392-.312-.28-.728-.42-1.248-.42-.512 0-.932.164-1.26.492-.32.32-.524.76-.612 1.32h3.672zM32.091 10.108c-.44 0-.848-.072-1.224-.216a3.054 3.054 0 0 1-.972-.636 3.12 3.12 0 0 1-.648-1.008 3.626 3.626 0 0 1-.228-1.32v-.096c0-.48.08-.916.24-1.308.16-.4.376-.74.648-1.02.28-.28.604-.496.972-.648.376-.16.772-.24 1.188-.24.328 0 .644.04.948.12.312.08.588.208.828.384.248.168.456.392.624.672.168.28.276.62.324 1.02h-.984c-.08-.496-.284-.848-.612-1.056-.32-.208-.696-.312-1.128-.312a1.93 1.93 0 0 0-.804.168c-.24.112-.452.272-.636.48a2.23 2.23 0 0 0-.42.744 2.991 2.991 0 0 0-.156.996v.096c0 .776.188 1.364.564 1.764.384.392.88.588 1.488.588.224 0 .436-.032.636-.096a1.651 1.651 0 0 0 .96-.768c.112-.192.18-.416.204-.672h.924a2.595 2.595 0 0 1-.276.948 2.386 2.386 0 0 1-.576.744c-.24.208-.52.372-.84.492-.32.12-.668.18-1.044.18zM38.335 10.108a2.83 2.83 0 0 1-.876-.132 1.724 1.724 0 0 1-.684-.42 2.145 2.145 0 0 1-.456-.756c-.112-.304-.168-.672-.168-1.104V3.724h.996v3.924c0 .552.116.956.348 1.212.24.256.608.384 1.104.384.224 0 .44-.036.648-.108.208-.072.392-.18.552-.324.16-.144.288-.324.384-.54.096-.216.144-.464.144-.744V3.724h.996V10h-.996v-.996c-.144.296-.388.556-.732.78-.336.216-.756.324-1.26.324zM43.216 3.724h.996v1.128c.2-.352.452-.64.756-.864.312-.232.748-.356 1.308-.372v.936a4.461 4.461 0 0 0-.852.12 1.647 1.647 0 0 0-.66.324 1.472 1.472 0 0 0-.408.612c-.096.248-.144.564-.144.948V10h-.996V3.724zM50 10.108c-.44 0-.848-.076-1.224-.228a2.916 2.916 0 0 1-.96-.636 2.966 2.966 0 0 1-.636-1.008 3.77 3.77 0 0 1-.216-1.308v-.096c0-.472.072-.904.216-1.296.144-.4.344-.74.6-1.02.264-.288.576-.508.936-.66.36-.16.756-.24 1.188-.24.36 0 .708.06 1.044.18.344.112.648.292.912.54.264.248.472.572.624.972.16.392.24.868.24 1.428v.324h-4.728c.024.72.204 1.272.54 1.656.336.376.828.564 1.476.564.984 0 1.54-.364 1.668-1.092h.996c-.112.632-.408 1.112-.888 1.44-.48.32-1.076.48-1.788.48zm1.704-3.852c-.048-.648-.232-1.112-.552-1.392-.312-.28-.728-.42-1.248-.42-.512 0-.932.164-1.26.492-.32.32-.524.76-.612 1.32h3.672zM56.496 10.108c-.408 0-.788-.068-1.14-.204a2.683 2.683 0 0 1-.9-.612 3.01 3.01 0 0 1-.588-.984 4.01 4.01 0 0 1-.204-1.32v-.096c0-.48.072-.92.216-1.32.144-.4.344-.744.6-1.032.256-.296.564-.524.924-.684.36-.16.756-.24 1.188-.24.528 0 .956.112 1.284.336.328.216.584.476.768.78V.724h.996V10h-.996V8.92c-.088.152-.208.3-.36.444a2.792 2.792 0 0 1-.516.384 2.874 2.874 0 0 1-.6.252c-.216.072-.44.108-.672.108zm.108-.828c.288 0 .56-.048.816-.144.256-.096.476-.24.66-.432.184-.2.328-.448.432-.744.112-.304.168-.656.168-1.056v-.096c0-.808-.18-1.404-.54-1.788-.352-.384-.836-.576-1.452-.576-.624 0-1.112.208-1.464.624-.352.416-.528 1.008-.528 1.776v.096c0 .392.048.736.144 1.032.104.296.24.54.408.732.176.192.38.336.612.432.232.096.48.144.744.144zM67.712 10.108c-.512 0-.948-.112-1.308-.336a2.38 2.38 0 0 1-.816-.804V10h-.996V.724h.996V4.78a1.92 1.92 0 0 1 .348-.432c.152-.144.32-.268.504-.372.192-.112.396-.2.612-.264.216-.064.436-.096.66-.096.408 0 .788.072 1.14.216.352.144.652.352.9.624.256.272.456.604.6.996.144.392.216.832.216 1.32v.096c0 .48-.068.92-.204 1.32a3.103 3.103 0 0 1-.576 1.02 2.583 2.583 0 0 1-.9.672 2.937 2.937 0 0 1-1.176.228zm-.096-.828c.624 0 1.1-.2 1.428-.6.328-.408.492-.996.492-1.764V6.82c0-.4-.052-.748-.156-1.044a2.095 2.095 0 0 0-.42-.732 1.53 1.53 0 0 0-.612-.444 1.798 1.798 0 0 0-.744-.156c-.288 0-.56.048-.816.144a1.71 1.71 0 0 0-.648.444c-.184.192-.328.44-.432.744a3.152 3.152 0 0 0-.156 1.044v.096c0 .8.192 1.396.576 1.788.384.384.88.576 1.488.576zM73.63 9.352l-2.46-5.628h1.068l1.92 4.5 1.74-4.5h1.02l-3.468 8.46h-1.008l1.188-2.832zM87.127 3.669A3.138 3.138 0 0 0 86.1 2.95a3.09 3.09 0 0 0-1.228-.25c-.448 0-.848.086-1.187.26a2.199 2.199 0 0 0-.662.497v-.191a.387.387 0 0 0-.214-.348.323.323 0 0 0-.14-.03h-1.315a.314.314 0 0 0-.254.116.377.377 0 0 0-.1.262v8.97c0 .1.034.188.1.258a.34.34 0 0 0 .254.103h1.341a.342.342 0 0 0 .244-.103.336.336 0 0 0 .11-.259v-3.06c.178.202.417.357.702.464.35.134.72.203 1.093.203.43 0 .848-.082 1.242-.248a3.124 3.124 0 0 0 1.04-.724c.305-.326.545-.709.707-1.128a3.93 3.93 0 0 0 .263-1.477c0-.54-.086-1.037-.263-1.477a3.387 3.387 0 0 0-.706-1.12zm-1.204 3.24c-.073.19-.18.362-.315.51a1.415 1.415 0 0 1-1.065.466c-.2.001-.4-.04-.584-.12a1.484 1.484 0 0 1-.49-.346 1.593 1.593 0 0 1-.32-.51 1.738 1.738 0 0 1-.115-.63c0-.224.04-.435.115-.631a1.532 1.532 0 0 1 .804-.846c.185-.086.386-.13.59-.129.215 0 .414.044.593.13.177.083.338.199.474.341a1.622 1.622 0 0 1 .425 1.135c0 .225-.037.436-.112.63zM95.298 2.89h-1.33a.339.339 0 0 0-.246.11.384.384 0 0 0-.108.266v.166a1.856 1.856 0 0 0-.602-.472 2.525 2.525 0 0 0-1.166-.258 3.227 3.227 0 0 0-2.284.964 3.554 3.554 0 0 0-.734 1.123 3.827 3.827 0 0 0-.275 1.477c0 .54.092 1.037.275 1.477.184.434.427.817.728 1.128a3.146 3.146 0 0 0 2.277.973c.437 0 .834-.088 1.173-.259.25-.13.456-.287.608-.471v.177a.34.34 0 0 0 .11.259.341.341 0 0 0 .244.104h1.33a.324.324 0 0 0 .25-.105.349.349 0 0 0 .102-.258V3.267a.377.377 0 0 0-.1-.262.325.325 0 0 0-.252-.115zM93.502 6.9a1.55 1.55 0 0 1-.312.511c-.136.143-.296.26-.473.344-.178.085-.38.129-.596.129-.207 0-.407-.044-.59-.13a1.501 1.501 0 0 1-.791-.855 1.766 1.766 0 0 1-.112-.62c0-.225.038-.436.112-.632.075-.193.181-.364.314-.504.137-.143.3-.26.478-.342.182-.085.382-.129.59-.129.215 0 .417.044.595.13.178.085.338.2.473.341a1.623 1.623 0 0 1 .424 1.135c0 .215-.037.424-.112.622zM108.567 6.094a2.265 2.265 0 0 0-.654-.402c-.247-.101-.509-.181-.785-.235l-1.014-.204c-.26-.05-.441-.117-.543-.203a.328.328 0 0 1-.136-.264c0-.11.063-.2.189-.282.137-.086.329-.13.566-.13.26 0 .518.053.757.157.243.106.471.226.67.36.295.187.546.162.727-.053l.487-.57a.543.543 0 0 0 .152-.357c0-.128-.064-.245-.185-.351-.207-.184-.533-.378-.971-.568-.437-.192-.987-.29-1.637-.29-.427 0-.82.058-1.168.172-.35.116-.65.276-.893.474-.245.204-.438.44-.57.713a2 2 0 0 0-.198.875c0 .56.167 1.017.496 1.358.328.333.766.56 1.304.67l1.054.232c.3.062.528.132.675.21.129.067.19.163.19.297 0 .12-.061.227-.188.324-.133.104-.342.155-.622.155a1.83 1.83 0 0 1-.831-.19 3.056 3.056 0 0 1-.678-.458.995.995 0 0 0-.307-.17c-.126-.037-.268.003-.431.13l-.583.461c-.169.145-.24.32-.209.522.029.194.19.394.491.62.269.193.614.368 1.029.518.415.151.901.229 1.453.229.444 0 .854-.058 1.215-.172.362-.119.681-.278.941-.48a2.056 2.056 0 0 0 .819-1.663c0-.319-.053-.6-.165-.836a1.843 1.843 0 0 0-.447-.6zM114.383 7.73a.363.363 0 0 0-.295-.192.55.55 0 0 0-.343.113c-.095.062-.198.11-.306.141a.75.75 0 0 1-.426.013.43.43 0 0 1-.181-.093.554.554 0 0 1-.143-.204.92.92 0 0 1-.059-.362v-2.46h1.731c.099 0 .188-.04.266-.117a.368.368 0 0 0 .112-.26V3.268a.369.369 0 0 0-.115-.268.38.38 0 0 0-.263-.109h-1.732V1.216a.354.354 0 0 0-.108-.27.347.347 0 0 0-.243-.104h-1.344a.36.36 0 0 0-.34.226.371.371 0 0 0-.027.148V2.89h-.767a.324.324 0 0 0-.255.115.385.385 0 0 0-.098.262V4.31a.4.4 0 0 0 .212.346c.044.021.092.032.14.03h.768v2.925c0 .39.069.726.2 1.003.132.274.305.504.514.676.217.178.465.31.731.388.27.084.551.126.833.126.385 0 .75-.061 1.094-.18a2.13 2.13 0 0 0 .861-.552c.152-.181.17-.381.046-.581l-.463-.76zM121.672 2.89h-1.329a.339.339 0 0 0-.244.11.39.39 0 0 0-.08.122.394.394 0 0 0-.027.144v.166a1.906 1.906 0 0 0-.605-.472c-.335-.173-.726-.258-1.168-.258-.42 0-.834.083-1.226.249a3.24 3.24 0 0 0-1.055.715 3.528 3.528 0 0 0-.734 1.123 3.79 3.79 0 0 0-.276 1.477c0 .54.092 1.037.275 1.477.184.434.428.817.729 1.128a3.138 3.138 0 0 0 2.273.973 2.59 2.59 0 0 0 1.175-.259c.255-.13.457-.287.612-.471v.177a.34.34 0 0 0 .108.259.343.343 0 0 0 .243.104h1.329a.335.335 0 0 0 .252-.105.364.364 0 0 0 .102-.258V3.267a.38.38 0 0 0-.1-.262.332.332 0 0 0-.115-.087.311.311 0 0 0-.139-.028zM119.876 6.9a1.534 1.534 0 0 1-.786.855 1.362 1.362 0 0 1-.594.129c-.207 0-.405-.044-.588-.13a1.516 1.516 0 0 1-.792-.855 1.757 1.757 0 0 1-.113-.62c0-.225.037-.436.112-.632.073-.187.179-.358.314-.504.138-.143.3-.26.479-.342.184-.086.385-.13.588-.129.217 0 .415.044.594.13.181.085.34.2.472.341.134.143.24.313.314.504a1.73 1.73 0 0 1 0 1.253zM128.978 7.64l-.763-.593c-.146-.118-.284-.15-.404-.1a.742.742 0 0 0-.279.205 2.527 2.527 0 0 1-.583.535c-.192.122-.444.183-.742.183-.219 0-.42-.04-.6-.122a1.423 1.423 0 0 1-.469-.342 1.575 1.575 0 0 1-.308-.51 1.751 1.751 0 0 1-.106-.617c0-.228.034-.438.106-.632.07-.192.173-.363.308-.503.135-.144.295-.26.472-.342.187-.088.391-.132.597-.13.298 0 .547.064.742.187.198.126.396.306.584.534.078.092.17.16.278.206.122.048.259.016.401-.101l.762-.594a.53.53 0 0 0 .201-.269.437.437 0 0 0-.034-.365 3.329 3.329 0 0 0-1.18-1.127c-.504-.291-1.108-.441-1.784-.441a3.519 3.519 0 0 0-2.51 1.033c-.322.322-.576.71-.747 1.137a3.68 3.68 0 0 0-.273 1.407c0 .495.093.968.273 1.402.173.424.427.808.747 1.128a3.527 3.527 0 0 0 2.51 1.034c.676 0 1.28-.149 1.784-.444a3.286 3.286 0 0 0 1.182-1.13.411.411 0 0 0 .055-.173.415.415 0 0 0-.023-.182.624.624 0 0 0-.197-.273zM136.06 9.045l-2.104-3.143 1.801-2.415c.094-.139.119-.272.075-.397-.031-.09-.116-.2-.334-.2h-1.425a.52.52 0 0 0-.234.058.482.482 0 0 0-.209.205L132.191 5.2h-.349V.363a.37.37 0 0 0-.099-.26.352.352 0 0 0-.253-.103h-1.332a.37.37 0 0 0-.337.22.346.346 0 0 0-.027.143V9.29c0 .103.038.193.11.259a.353.353 0 0 0 .254.104h1.333a.328.328 0 0 0 .251-.105.346.346 0 0 0 .075-.119.333.333 0 0 0 .024-.14V6.927h.386l1.571 2.446c.112.187.267.281.46.281h1.491c.226 0 .32-.11.358-.202.054-.13.038-.262-.047-.406zM102.863 2.89h-1.489a.389.389 0 0 0-.298.122.544.544 0 0 0-.13.249l-1.099 4.167h-.268l-1.182-4.167a.66.66 0 0 0-.113-.247.329.329 0 0 0-.264-.124h-1.544c-.199 0-.325.066-.372.193a.588.588 0 0 0-.002.37l1.887 5.865c.03.093.08.17.145.232a.388.388 0 0 0 .281.104h.798l-.066.19-.19.547a.872.872 0 0 1-.29.426.7.7 0 0 1-.442.148.956.956 0 0 1-.4-.09 1.842 1.842 0 0 1-.35-.209.62.62 0 0 0-.335-.115h-.016c-.13 0-.243.074-.334.216l-.474.708c-.193.304-.086.504.039.615.234.224.528.399.875.524.344.125.723.186 1.126.186.682 0 1.252-.187 1.689-.565.435-.376.756-.887.952-1.524l2.188-7.258c.05-.155.05-.284.005-.389-.037-.08-.125-.174-.327-.174z\" fill=\"#011B33\"/>\n    </svg>";

var secureByPaystackWhite = "\n  <svg id=\"inline-button-wordmark--white\" width=\"137\" height=\"13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M.037 5.095l1.075-.135c-.011-.774-.025-1.944-.013-2.149C1.19 1.364 2.38.134 3.81.013 3.9.006 3.99.002 4.077 0a2.947 2.947 0 0 1 2.046.76c.574.509.95 1.26 1.008 2.007.015.192.01 1.491.01 2.257l1.096.163L8.2 11.44 4.093 12 0 11.346l.037-6.251zm4.106-.514l1.724.256c-.007-.933-.05-2.295-.26-2.654-.319-.545-.846-.867-1.443-.88h-.063c-.607.008-1.138.322-1.458.864-.222.378-.266 1.66-.265 2.637l1.765-.223zM18.228 10.108c-.576 0-1.064-.072-1.464-.216a2.864 2.864 0 0 1-.972-.6 2.552 2.552 0 0 1-.588-.864 4.067 4.067 0 0 1-.252-1.044h1.008c.032.256.088.5.168.732.08.224.204.424.372.6.168.168.388.304.66.408.28.096.636.144 1.068.144.28 0 .536-.036.768-.108.24-.08.448-.192.624-.336.176-.144.312-.316.408-.516.104-.2.156-.42.156-.66 0-.24-.032-.448-.096-.624a1.02 1.02 0 0 0-.336-.468 1.885 1.885 0 0 0-.636-.324 6.4 6.4 0 0 0-1.008-.228 8.79 8.79 0 0 1-1.212-.276 3.246 3.246 0 0 1-.9-.432 1.982 1.982 0 0 1-.564-.672c-.128-.272-.192-.6-.192-.984 0-.328.068-.632.204-.912.136-.288.324-.536.564-.744.248-.208.54-.372.876-.492.336-.12.708-.18 1.116-.18.864 0 1.548.204 2.052.612.512.4.812.984.9 1.752h-.936c-.104-.544-.316-.932-.636-1.164-.32-.24-.78-.36-1.38-.36-.592 0-1.04.132-1.344.396a1.255 1.255 0 0 0-.444.996c0 .208.024.396.072.564.056.16.156.3.3.42.152.12.36.228.624.324a6.72 6.72 0 0 0 1.068.228c.48.072.9.168 1.26.288.36.12.664.276.912.468s.432.428.552.708c.128.28.192.624.192 1.032 0 .36-.076.696-.228 1.008a2.472 2.472 0 0 1-.612.804c-.264.224-.58.4-.948.528-.36.128-.752.192-1.176.192zM25.355 10.108c-.44 0-.848-.076-1.224-.228a2.916 2.916 0 0 1-.96-.636 2.966 2.966 0 0 1-.636-1.008 3.77 3.77 0 0 1-.216-1.308v-.096c0-.472.072-.904.216-1.296.144-.4.344-.74.6-1.02.264-.288.576-.508.936-.66.36-.16.756-.24 1.188-.24.36 0 .708.06 1.044.18.344.112.648.292.912.54.264.248.472.572.624.972.16.392.24.868.24 1.428v.324h-4.728c.024.72.204 1.272.54 1.656.336.376.828.564 1.476.564.984 0 1.54-.364 1.668-1.092h.996c-.112.632-.408 1.112-.888 1.44-.48.32-1.076.48-1.788.48zm1.704-3.852c-.048-.648-.232-1.112-.552-1.392-.312-.28-.728-.42-1.248-.42-.512 0-.932.164-1.26.492-.32.32-.524.76-.612 1.32h3.672zM32.091 10.108c-.44 0-.848-.072-1.224-.216a3.054 3.054 0 0 1-.972-.636 3.12 3.12 0 0 1-.648-1.008 3.626 3.626 0 0 1-.228-1.32v-.096c0-.48.08-.916.24-1.308.16-.4.376-.74.648-1.02.28-.28.604-.496.972-.648.376-.16.772-.24 1.188-.24.328 0 .644.04.948.12.312.08.588.208.828.384.248.168.456.392.624.672.168.28.276.62.324 1.02h-.984c-.08-.496-.284-.848-.612-1.056-.32-.208-.696-.312-1.128-.312a1.93 1.93 0 0 0-.804.168c-.24.112-.452.272-.636.48a2.23 2.23 0 0 0-.42.744 2.991 2.991 0 0 0-.156.996v.096c0 .776.188 1.364.564 1.764.384.392.88.588 1.488.588.224 0 .436-.032.636-.096a1.651 1.651 0 0 0 .96-.768c.112-.192.18-.416.204-.672h.924a2.595 2.595 0 0 1-.276.948 2.386 2.386 0 0 1-.576.744c-.24.208-.52.372-.84.492-.32.12-.668.18-1.044.18zM38.335 10.108a2.83 2.83 0 0 1-.876-.132 1.724 1.724 0 0 1-.684-.42 2.145 2.145 0 0 1-.456-.756c-.112-.304-.168-.672-.168-1.104V3.724h.996v3.924c0 .552.116.956.348 1.212.24.256.608.384 1.104.384.224 0 .44-.036.648-.108.208-.072.392-.18.552-.324.16-.144.288-.324.384-.54.096-.216.144-.464.144-.744V3.724h.996V10h-.996v-.996c-.144.296-.388.556-.732.78-.336.216-.756.324-1.26.324zM43.216 3.724h.996v1.128c.2-.352.452-.64.756-.864.312-.232.748-.356 1.308-.372v.936a4.461 4.461 0 0 0-.852.12 1.647 1.647 0 0 0-.66.324 1.472 1.472 0 0 0-.408.612c-.096.248-.144.564-.144.948V10h-.996V3.724zM50 10.108c-.44 0-.848-.076-1.224-.228a2.916 2.916 0 0 1-.96-.636 2.966 2.966 0 0 1-.636-1.008 3.77 3.77 0 0 1-.216-1.308v-.096c0-.472.072-.904.216-1.296.144-.4.344-.74.6-1.02.264-.288.576-.508.936-.66.36-.16.756-.24 1.188-.24.36 0 .708.06 1.044.18.344.112.648.292.912.54.264.248.472.572.624.972.16.392.24.868.24 1.428v.324h-4.728c.024.72.204 1.272.54 1.656.336.376.828.564 1.476.564.984 0 1.54-.364 1.668-1.092h.996c-.112.632-.408 1.112-.888 1.44-.48.32-1.076.48-1.788.48zm1.704-3.852c-.048-.648-.232-1.112-.552-1.392-.312-.28-.728-.42-1.248-.42-.512 0-.932.164-1.26.492-.32.32-.524.76-.612 1.32h3.672zM56.496 10.108c-.408 0-.788-.068-1.14-.204a2.683 2.683 0 0 1-.9-.612 3.01 3.01 0 0 1-.588-.984 4.01 4.01 0 0 1-.204-1.32v-.096c0-.48.072-.92.216-1.32.144-.4.344-.744.6-1.032.256-.296.564-.524.924-.684.36-.16.756-.24 1.188-.24.528 0 .956.112 1.284.336.328.216.584.476.768.78V.724h.996V10h-.996V8.92c-.088.152-.208.3-.36.444a2.792 2.792 0 0 1-.516.384 2.874 2.874 0 0 1-.6.252c-.216.072-.44.108-.672.108zm.108-.828c.288 0 .56-.048.816-.144.256-.096.476-.24.66-.432.184-.2.328-.448.432-.744.112-.304.168-.656.168-1.056v-.096c0-.808-.18-1.404-.54-1.788-.352-.384-.836-.576-1.452-.576-.624 0-1.112.208-1.464.624-.352.416-.528 1.008-.528 1.776v.096c0 .392.048.736.144 1.032.104.296.24.54.408.732.176.192.38.336.612.432.232.096.48.144.744.144zM67.712 10.108c-.512 0-.948-.112-1.308-.336a2.38 2.38 0 0 1-.816-.804V10h-.996V.724h.996V4.78a1.92 1.92 0 0 1 .348-.432c.152-.144.32-.268.504-.372.192-.112.396-.2.612-.264.216-.064.436-.096.66-.096.408 0 .788.072 1.14.216.352.144.652.352.9.624.256.272.456.604.6.996.144.392.216.832.216 1.32v.096c0 .48-.068.92-.204 1.32a3.103 3.103 0 0 1-.576 1.02 2.583 2.583 0 0 1-.9.672 2.937 2.937 0 0 1-1.176.228zm-.096-.828c.624 0 1.1-.2 1.428-.6.328-.408.492-.996.492-1.764V6.82c0-.4-.052-.748-.156-1.044a2.095 2.095 0 0 0-.42-.732 1.53 1.53 0 0 0-.612-.444 1.798 1.798 0 0 0-.744-.156c-.288 0-.56.048-.816.144a1.71 1.71 0 0 0-.648.444c-.184.192-.328.44-.432.744a3.152 3.152 0 0 0-.156 1.044v.096c0 .8.192 1.396.576 1.788.384.384.88.576 1.488.576zM73.63 9.352l-2.46-5.628h1.068l1.92 4.5 1.74-4.5h1.02l-3.468 8.46h-1.008l1.188-2.832zM87.127 3.669A3.138 3.138 0 0 0 86.1 2.95a3.09 3.09 0 0 0-1.228-.25c-.448 0-.848.086-1.187.26a2.199 2.199 0 0 0-.662.497v-.191a.387.387 0 0 0-.214-.348.323.323 0 0 0-.14-.03h-1.315a.314.314 0 0 0-.254.116.377.377 0 0 0-.1.262v8.97c0 .1.034.188.1.258a.34.34 0 0 0 .254.103h1.341a.342.342 0 0 0 .244-.103.336.336 0 0 0 .11-.259v-3.06c.178.202.417.357.702.464.35.134.72.203 1.093.203.43 0 .848-.082 1.242-.248a3.124 3.124 0 0 0 1.04-.724c.305-.326.545-.709.707-1.128a3.93 3.93 0 0 0 .263-1.477c0-.54-.086-1.037-.263-1.477a3.387 3.387 0 0 0-.706-1.12zm-1.204 3.24c-.073.19-.18.362-.315.51a1.415 1.415 0 0 1-1.065.466c-.2.001-.4-.04-.584-.12a1.484 1.484 0 0 1-.49-.346 1.593 1.593 0 0 1-.32-.51 1.738 1.738 0 0 1-.115-.63c0-.224.04-.435.115-.631a1.532 1.532 0 0 1 .804-.846c.185-.086.386-.13.59-.129.215 0 .414.044.593.13.177.083.338.199.474.341a1.622 1.622 0 0 1 .425 1.135c0 .225-.037.436-.112.63zM95.298 2.89h-1.33a.339.339 0 0 0-.246.11.384.384 0 0 0-.108.266v.166a1.856 1.856 0 0 0-.602-.472 2.525 2.525 0 0 0-1.166-.258 3.227 3.227 0 0 0-2.284.964 3.554 3.554 0 0 0-.734 1.123 3.827 3.827 0 0 0-.275 1.477c0 .54.092 1.037.275 1.477.184.434.427.817.728 1.128a3.146 3.146 0 0 0 2.277.973c.437 0 .834-.088 1.173-.259.25-.13.456-.287.608-.471v.177a.34.34 0 0 0 .11.259.341.341 0 0 0 .244.104h1.33a.324.324 0 0 0 .25-.105.349.349 0 0 0 .102-.258V3.267a.377.377 0 0 0-.1-.262.325.325 0 0 0-.252-.115zM93.502 6.9a1.55 1.55 0 0 1-.312.511c-.136.143-.296.26-.473.344-.178.085-.38.129-.596.129-.207 0-.407-.044-.59-.13a1.501 1.501 0 0 1-.791-.855 1.766 1.766 0 0 1-.112-.62c0-.225.038-.436.112-.632.075-.193.181-.364.314-.504.137-.143.3-.26.478-.342.182-.085.382-.129.59-.129.215 0 .417.044.595.13.178.085.338.2.473.341a1.623 1.623 0 0 1 .424 1.135c0 .215-.037.424-.112.622zM108.567 6.094a2.265 2.265 0 0 0-.654-.402c-.247-.101-.509-.181-.785-.235l-1.014-.204c-.26-.05-.441-.117-.543-.203a.328.328 0 0 1-.136-.264c0-.11.063-.2.189-.282.137-.086.329-.13.566-.13.26 0 .518.053.757.157.243.106.471.226.67.36.295.187.546.162.727-.053l.487-.57a.543.543 0 0 0 .152-.357c0-.128-.064-.245-.185-.351-.207-.184-.533-.378-.971-.568-.437-.192-.987-.29-1.637-.29-.427 0-.82.058-1.168.172-.35.116-.65.276-.893.474-.245.204-.438.44-.57.713a2 2 0 0 0-.198.875c0 .56.167 1.017.496 1.358.328.333.766.56 1.304.67l1.054.232c.3.062.528.132.675.21.129.067.19.163.19.297 0 .12-.061.227-.188.324-.133.104-.342.155-.622.155a1.83 1.83 0 0 1-.831-.19 3.056 3.056 0 0 1-.678-.458.995.995 0 0 0-.307-.17c-.126-.037-.268.003-.431.13l-.583.461c-.169.145-.24.32-.209.522.029.194.19.394.491.62.269.193.614.368 1.029.518.415.151.901.229 1.453.229.444 0 .854-.058 1.215-.172.362-.119.681-.278.941-.48a2.056 2.056 0 0 0 .819-1.663c0-.319-.053-.6-.165-.836a1.843 1.843 0 0 0-.447-.6zM114.383 7.73a.363.363 0 0 0-.295-.192.55.55 0 0 0-.343.113c-.095.062-.198.11-.306.141a.75.75 0 0 1-.426.013.43.43 0 0 1-.181-.093.554.554 0 0 1-.143-.204.92.92 0 0 1-.059-.362v-2.46h1.731c.099 0 .188-.04.266-.117a.368.368 0 0 0 .112-.26V3.268a.369.369 0 0 0-.115-.268.38.38 0 0 0-.263-.109h-1.732V1.216a.354.354 0 0 0-.108-.27.347.347 0 0 0-.243-.104h-1.344a.36.36 0 0 0-.34.226.371.371 0 0 0-.027.148V2.89h-.767a.324.324 0 0 0-.255.115.385.385 0 0 0-.098.262V4.31a.4.4 0 0 0 .212.346c.044.021.092.032.14.03h.768v2.925c0 .39.069.726.2 1.003.132.274.305.504.514.676.217.178.465.31.731.388.27.084.551.126.833.126.385 0 .75-.061 1.094-.18a2.13 2.13 0 0 0 .861-.552c.152-.181.17-.381.046-.581l-.463-.76zM121.672 2.89h-1.329a.339.339 0 0 0-.244.11.39.39 0 0 0-.08.122.394.394 0 0 0-.027.144v.166a1.906 1.906 0 0 0-.605-.472c-.335-.173-.726-.258-1.168-.258-.42 0-.834.083-1.226.249a3.24 3.24 0 0 0-1.055.715 3.528 3.528 0 0 0-.734 1.123 3.79 3.79 0 0 0-.276 1.477c0 .54.092 1.037.275 1.477.184.434.428.817.729 1.128a3.138 3.138 0 0 0 2.273.973 2.59 2.59 0 0 0 1.175-.259c.255-.13.457-.287.612-.471v.177a.34.34 0 0 0 .108.259.343.343 0 0 0 .243.104h1.329a.335.335 0 0 0 .252-.105.364.364 0 0 0 .102-.258V3.267a.38.38 0 0 0-.1-.262.332.332 0 0 0-.115-.087.311.311 0 0 0-.139-.028zM119.876 6.9a1.534 1.534 0 0 1-.786.855 1.362 1.362 0 0 1-.594.129c-.207 0-.405-.044-.588-.13a1.516 1.516 0 0 1-.792-.855 1.757 1.757 0 0 1-.113-.62c0-.225.037-.436.112-.632.073-.187.179-.358.314-.504.138-.143.3-.26.479-.342.184-.086.385-.13.588-.129.217 0 .415.044.594.13.181.085.34.2.472.341.134.143.24.313.314.504a1.73 1.73 0 0 1 0 1.253zM128.978 7.64l-.763-.593c-.146-.118-.284-.15-.404-.1a.742.742 0 0 0-.279.205 2.527 2.527 0 0 1-.583.535c-.192.122-.444.183-.742.183-.219 0-.42-.04-.6-.122a1.423 1.423 0 0 1-.469-.342 1.575 1.575 0 0 1-.308-.51 1.751 1.751 0 0 1-.106-.617c0-.228.034-.438.106-.632.07-.192.173-.363.308-.503.135-.144.295-.26.472-.342.187-.088.391-.132.597-.13.298 0 .547.064.742.187.198.126.396.306.584.534.078.092.17.16.278.206.122.048.259.016.401-.101l.762-.594a.53.53 0 0 0 .201-.269.437.437 0 0 0-.034-.365 3.329 3.329 0 0 0-1.18-1.127c-.504-.291-1.108-.441-1.784-.441a3.519 3.519 0 0 0-2.51 1.033c-.322.322-.576.71-.747 1.137a3.68 3.68 0 0 0-.273 1.407c0 .495.093.968.273 1.402.173.424.427.808.747 1.128a3.527 3.527 0 0 0 2.51 1.034c.676 0 1.28-.149 1.784-.444a3.286 3.286 0 0 0 1.182-1.13.411.411 0 0 0 .055-.173.415.415 0 0 0-.023-.182.624.624 0 0 0-.197-.273zM136.06 9.045l-2.104-3.143 1.801-2.415c.094-.139.119-.272.075-.397-.031-.09-.116-.2-.334-.2h-1.425a.52.52 0 0 0-.234.058.482.482 0 0 0-.209.205L132.191 5.2h-.349V.363a.37.37 0 0 0-.099-.26.352.352 0 0 0-.253-.103h-1.332a.37.37 0 0 0-.337.22.346.346 0 0 0-.027.143V9.29c0 .103.038.193.11.259a.353.353 0 0 0 .254.104h1.333a.328.328 0 0 0 .251-.105.346.346 0 0 0 .075-.119.333.333 0 0 0 .024-.14V6.927h.386l1.571 2.446c.112.187.267.281.46.281h1.491c.226 0 .32-.11.358-.202.054-.13.038-.262-.047-.406zM102.863 2.89h-1.489a.389.389 0 0 0-.298.122.544.544 0 0 0-.13.249l-1.099 4.167h-.268l-1.182-4.167a.66.66 0 0 0-.113-.247.329.329 0 0 0-.264-.124h-1.544c-.199 0-.325.066-.372.193a.588.588 0 0 0-.002.37l1.887 5.865c.03.093.08.17.145.232a.388.388 0 0 0 .281.104h.798l-.066.19-.19.547a.872.872 0 0 1-.29.426.7.7 0 0 1-.442.148.956.956 0 0 1-.4-.09 1.842 1.842 0 0 1-.35-.209.62.62 0 0 0-.335-.115h-.016c-.13 0-.243.074-.334.216l-.474.708c-.193.304-.086.504.039.615.234.224.528.399.875.524.344.125.723.186 1.126.186.682 0 1.252-.187 1.689-.565.435-.376.756-.887.952-1.524l2.188-7.258c.05-.155.05-.284.005-.389-.037-.08-.125-.174-.327-.174z\" fill=\"#ffffff\"/>\n  </svg>\n";

var secureByPaystackGrey = "\n<svg id=\"inline-button-wordmark--grey\" width=\"166\" height=\"16\" viewBox=\"0 0 166 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path\n  d=\"M0.564068 6.26985L1.86515 6.10375C1.85184 5.15143 1.83489 3.71187 1.84942 3.45964C1.95955 1.67927 3.39982 0.16589 5.13056 0.0170127C5.23949 0.00839996 5.34842 0.0034784 5.45371 0.00101762C6.36645 -0.0209585 7.25272 0.313716 7.93 0.936113C8.62472 1.56238 9.07979 2.4864 9.14999 3.4055C9.16815 3.64174 9.1621 5.24002 9.1621 6.18249L10.4886 6.38305L10.4438 14.0767L5.47308 14.7657L0.519287 13.961L0.564068 6.26985ZM5.53359 5.63743L7.62016 5.95241C7.61169 4.80446 7.55965 3.12867 7.30548 2.68696C6.91939 2.0164 6.28156 1.62021 5.55901 1.60421H5.48276C4.7481 1.61406 4.10543 2.0004 3.71813 2.66727C3.44944 3.13236 3.39619 4.70972 3.3974 5.91181L5.53359 5.63743ZM22.5808 12.4378C21.8836 12.4378 21.293 12.3492 20.8089 12.172C20.372 12.0088 19.9719 11.7577 19.6325 11.4338C19.3256 11.1331 19.0833 10.7712 18.9208 10.3707C18.7637 9.95815 18.6612 9.52621 18.6158 9.08621H19.8358C19.8745 9.40119 19.9423 9.70141 20.0391 9.98686C20.136 10.2625 20.286 10.5085 20.4894 10.7251C20.6927 10.9318 20.959 11.0991 21.2882 11.2271C21.6271 11.3452 22.0579 11.4043 22.5808 11.4043C22.9197 11.4043 23.2295 11.36 23.5103 11.2714C23.8008 11.173 24.0525 11.0351 24.2655 10.858C24.4785 10.6808 24.6431 10.4692 24.7593 10.2231C24.8852 9.97701 24.9481 9.70633 24.9481 9.41103C24.9481 9.11574 24.9094 8.85982 24.8319 8.64327C24.7536 8.41559 24.6125 8.21568 24.4253 8.06745C24.196 7.88594 23.9347 7.75064 23.6555 7.6688C23.257 7.54201 22.849 7.4482 22.4355 7.38828C21.9393 7.31041 21.4491 7.19693 20.9686 7.04869C20.5808 6.92967 20.2133 6.75038 19.8794 6.51716C19.5939 6.29685 19.3607 6.01432 19.1968 5.69034C19.0418 5.35567 18.9644 4.9521 18.9644 4.47963C18.9644 4.07607 19.0467 3.70203 19.2113 3.35752C19.3759 3.00317 19.6034 2.69803 19.8939 2.44211C20.194 2.18619 20.5475 1.98441 20.9541 1.83676C21.3608 1.68911 21.811 1.61529 22.3048 1.61529C23.3505 1.61529 24.1784 1.86629 24.7884 2.36829C25.4081 2.86044 25.7711 3.57899 25.8777 4.52393H24.7448C24.6189 3.8546 24.3624 3.37721 23.9751 3.09176C23.5878 2.79646 23.031 2.64882 22.3048 2.64882C21.5883 2.64882 21.0461 2.81123 20.6782 3.13605C20.5037 3.28606 20.3648 3.47417 20.2717 3.68635C20.1787 3.89853 20.1339 4.12931 20.1408 4.36152C20.1408 4.61744 20.1698 4.84875 20.2279 5.05546C20.2957 5.25232 20.4167 5.42457 20.591 5.57222C20.775 5.71987 21.0267 5.85275 21.3463 5.97087C21.7689 6.09987 22.2012 6.19369 22.6389 6.25139C23.2198 6.33998 23.7281 6.4581 24.1639 6.60575C24.5996 6.75339 24.9675 6.94533 25.2677 7.18157C25.5678 7.4178 25.7905 7.70818 25.9358 8.05268C26.0907 8.39719 26.1681 8.82045 26.1681 9.32245C26.1681 9.76539 26.0761 10.1788 25.8922 10.5627C25.7149 10.9408 25.4627 11.2775 25.1515 11.5519C24.8319 11.8275 24.4495 12.0441 24.0041 12.2016C23.5684 12.359 23.094 12.4378 22.5808 12.4378ZM31.2066 12.4378C30.6741 12.4378 30.1803 12.3443 29.7252 12.1573C29.2906 11.9775 28.8956 11.7115 28.5633 11.3747C28.2268 11.0185 27.965 10.5966 27.7936 10.1345C27.6136 9.61796 27.5251 9.07309 27.5321 8.52515V8.40704C27.5321 7.82629 27.6193 7.29476 27.7936 6.81245C27.9679 6.3203 28.2099 5.90196 28.5198 5.55746C28.8393 5.2031 29.2169 4.93242 29.6526 4.7454C30.0883 4.54854 30.5676 4.45011 31.0905 4.45011C31.5262 4.45011 31.9473 4.52393 32.354 4.67158C32.7704 4.80938 33.1383 5.03085 33.4578 5.33599C33.7773 5.64112 34.0291 6.03977 34.213 6.53192C34.4067 7.01424 34.5035 7.5999 34.5035 8.28892V8.68756H28.7812C28.8102 9.57345 29.0281 10.2526 29.4348 10.7251C29.8414 11.1877 30.4369 11.419 31.2212 11.419C32.4121 11.419 33.085 10.9712 33.24 10.0754H34.4454C34.3099 10.8531 33.9516 11.4436 33.3707 11.8472C32.7897 12.2409 32.0684 12.4378 31.2066 12.4378ZM33.269 7.69833C33.2109 6.90104 32.9882 6.33014 32.6009 5.98563C32.2233 5.64112 31.7198 5.46887 31.0905 5.46887C30.4708 5.46887 29.9624 5.67065 29.5655 6.07422C29.1782 6.46794 28.9313 7.00932 28.8248 7.69833H33.269ZM39.3593 12.4378C38.8267 12.4378 38.3329 12.3492 37.8779 12.172C37.4401 11.9901 37.0407 11.7245 36.7014 11.3895C36.3636 11.0315 36.0973 10.6103 35.9172 10.1493C35.7268 9.63002 35.6332 9.07925 35.6412 8.52515V8.40704C35.6412 7.81645 35.738 7.28 35.9317 6.79769C36.1253 6.30553 36.3868 5.8872 36.716 5.54269C37.0548 5.19818 37.447 4.93242 37.8924 4.7454C38.3475 4.54854 38.8267 4.45011 39.3302 4.45011C39.7272 4.45011 40.1097 4.49932 40.4776 4.59775C40.8552 4.69618 41.1893 4.85367 41.4797 5.07022C41.7799 5.27693 42.0316 5.55253 42.235 5.89704C42.4383 6.24155 42.569 6.65988 42.6271 7.15204H41.4362C41.3393 6.54177 41.0924 6.10867 40.6955 5.85275C40.3082 5.59683 39.8531 5.46887 39.3302 5.46887C38.995 5.46599 38.6632 5.53649 38.3571 5.67557C38.0667 5.81338 37.8101 6.01024 37.5874 6.26616C37.3615 6.53514 37.1889 6.84598 37.0791 7.18157C36.9484 7.57626 36.8845 7.99063 36.8902 8.40704V8.52515C36.8902 9.47994 37.1178 10.2034 37.5729 10.6956C38.0376 11.1779 38.6379 11.419 39.3738 11.419C39.6449 11.419 39.9015 11.3797 40.1436 11.3009C40.6361 11.1497 41.0523 10.8113 41.3055 10.356C41.441 10.1197 41.5233 9.84413 41.5524 9.52915H42.6707C42.6338 9.9361 42.5204 10.3321 42.3366 10.6956C42.1663 11.0447 41.9293 11.3559 41.6395 11.611C41.349 11.8669 41.0101 12.0687 40.6228 12.2163C40.2355 12.364 39.8144 12.4378 39.3593 12.4378ZM46.9164 12.4378C46.5568 12.4406 46.199 12.3858 45.8562 12.2754C45.5441 12.1717 45.2605 11.9947 45.0284 11.7586C44.7829 11.4908 44.595 11.1741 44.4765 10.8284C44.3409 10.4544 44.2731 10.0016 44.2731 9.47009V4.58299H45.4786V9.41103C45.4786 10.0902 45.619 10.5873 45.8998 10.9023C46.1903 11.2172 46.6356 11.3747 47.236 11.3747C47.5071 11.3747 47.7685 11.3304 48.0202 11.2419C48.272 11.1533 48.4947 11.0204 48.6883 10.8432C48.882 10.666 49.0369 10.4446 49.1531 10.1788C49.2693 9.91303 49.3274 9.6079 49.3274 9.26339V4.58299H50.5328V12.3049H49.3274V11.0794C49.1531 11.4436 48.8578 11.7635 48.4414 12.0391C48.0348 12.3049 47.5264 12.4378 46.9164 12.4378ZM52.8239 4.58299H54.0294V5.97087C54.2715 5.53777 54.5765 5.18342 54.9444 4.90781C55.322 4.62236 55.8497 4.46979 56.5275 4.45011V5.60175C56.1799 5.61707 55.8346 5.66652 55.4963 5.7494C55.2039 5.81939 54.9308 5.95567 54.6975 6.14804C54.4729 6.35252 54.303 6.6116 54.2037 6.90104C54.0875 7.20618 54.0294 7.59498 54.0294 8.06745V12.3049H52.8239V4.58299ZM61.0347 12.4378C60.5021 12.4378 60.0083 12.3443 59.5533 12.1573C59.1186 11.9775 58.7236 11.7115 58.3914 11.3747C58.0549 11.0185 57.793 10.5966 57.6216 10.1345C57.4416 9.61796 57.3531 9.07309 57.3602 8.52515V8.40704C57.3602 7.82629 57.4473 7.29476 57.6216 6.81245C57.7959 6.3203 58.038 5.90196 58.3478 5.55746C58.6673 5.2031 59.0449 4.93242 59.4806 4.7454C59.9164 4.54854 60.3956 4.45011 60.9185 4.45011C61.3542 4.45011 61.7754 4.52393 62.1821 4.67158C62.5984 4.80938 62.9663 5.03085 63.2859 5.33599C63.6054 5.64112 63.8571 6.03977 64.0411 6.53192C64.2347 7.01424 64.3316 7.5999 64.3316 8.28892V8.68756H58.6092C58.6383 9.57345 58.8561 10.2526 59.2628 10.7251C59.6695 11.1877 60.2649 11.419 61.0492 11.419C62.2401 11.419 62.9131 10.9712 63.068 10.0754H64.2735C64.1379 10.8531 63.7797 11.4436 63.1987 11.8472C62.6178 12.2409 61.8964 12.4378 61.0347 12.4378ZM63.097 7.69833C63.0389 6.90104 62.8162 6.33014 62.429 5.98563C62.0513 5.64112 61.5478 5.46887 60.9185 5.46887C60.2988 5.46887 59.7905 5.67065 59.3935 6.07422C59.0062 6.46794 58.7593 7.00932 58.6528 7.69833H63.097ZM68.8968 12.4378C68.403 12.4378 67.9431 12.3541 67.5171 12.1868C67.1072 12.0141 66.7365 11.7578 66.4278 11.4338C66.1165 11.0803 65.8749 10.6693 65.7161 10.2231C65.5451 9.69956 65.4617 9.15057 65.4692 8.59898V8.48086C65.4692 7.89027 65.5564 7.3489 65.7307 6.85675C65.905 6.36459 66.147 5.94134 66.4569 5.58698C66.7667 5.22279 67.1395 4.94226 67.5752 4.7454C68.0109 4.54854 68.4902 4.45011 69.013 4.45011C69.6521 4.45011 70.1701 4.58791 70.5671 4.86352C70.964 5.12928 71.2739 5.44918 71.4966 5.82322V0.891819H72.702V12.3049H71.4966V10.9761C71.3901 11.1631 71.2448 11.3452 71.0609 11.5224C70.8713 11.7038 70.6617 11.8623 70.4363 11.9949C70.2066 12.1258 69.963 12.2298 69.7102 12.3049C69.4487 12.3935 69.1776 12.4378 68.8968 12.4378ZM69.0275 11.419C69.3761 11.419 69.7053 11.36 70.0152 11.2419C70.325 11.1237 70.5913 10.9466 70.814 10.7103C71.0367 10.4642 71.2109 10.1591 71.3368 9.79492C71.4724 9.42088 71.5401 8.98778 71.5401 8.49562V8.37751C71.5401 7.38335 71.3223 6.65004 70.8866 6.17757C70.4606 5.7051 69.8748 5.46887 69.1292 5.46887C68.374 5.46887 67.7834 5.72479 67.3573 6.23663C66.9313 6.74847 66.7183 7.47686 66.7183 8.4218V8.53992C66.7183 9.02223 66.7764 9.44549 66.8926 9.80968C67.0184 10.1739 67.183 10.4741 67.3864 10.7103C67.5994 10.9466 67.8463 11.1237 68.1271 11.2419C68.4079 11.36 68.708 11.419 69.0275 11.419ZM82.4716 12.4378C81.852 12.4378 81.3243 12.3 80.8886 12.0244C80.485 11.7813 80.146 11.4417 79.901 11.0351V12.3049H78.6955V0.891819H79.901V5.88228C80.0153 5.68531 80.1572 5.50626 80.3221 5.35075C80.5061 5.17357 80.7094 5.02101 80.9321 4.89305C81.1645 4.75524 81.4114 4.64697 81.6729 4.56822C81.9343 4.48948 82.2005 4.45011 82.4716 4.45011C82.9655 4.45011 83.4254 4.53869 83.8514 4.71587C84.2774 4.89305 84.6405 5.14897 84.9407 5.48363C85.2505 5.8183 85.4926 6.22679 85.6669 6.7091C85.8411 7.19141 85.9283 7.73278 85.9283 8.33321V8.45133C85.9283 9.04192 85.846 9.58329 85.6814 10.0754C85.5295 10.535 85.2929 10.9609 84.9843 11.3304C84.6852 11.6839 84.3133 11.9662 83.895 12.1573C83.4445 12.3492 82.96 12.4447 82.4716 12.4378ZM82.3555 11.419C83.1107 11.419 83.6868 11.173 84.0838 10.6808C84.4808 10.1788 84.6793 9.45533 84.6793 8.51039V8.39227C84.6793 7.90012 84.6163 7.47194 84.4904 7.10775C84.3829 6.77559 84.2099 6.46915 83.9821 6.2071C83.7841 5.96487 83.5294 5.77704 83.2414 5.66081C82.9581 5.53232 82.6511 5.46687 82.3409 5.46887C81.9924 5.46887 81.6632 5.52793 81.3533 5.64604C81.0537 5.7638 80.7852 5.95084 80.569 6.19234C80.3464 6.42857 80.1721 6.73371 80.0462 7.10775C79.9127 7.52209 79.8488 7.95635 79.8574 8.39227V8.51039C79.8574 9.4947 80.0898 10.228 80.5545 10.7103C81.0193 11.1828 81.6196 11.419 82.3555 11.419ZM89.6342 11.5076L86.6569 4.58299H87.9495L90.2733 10.1197L92.3792 4.58299H93.6137L89.4164 14.9921H88.1964L89.6342 11.5076ZM105.97 4.51532C105.618 4.13844 105.195 3.83755 104.727 3.63067C104.257 3.42601 103.751 3.32132 103.241 3.32307C102.698 3.32307 102.214 3.42888 101.804 3.64297C101.501 3.7934 101.229 4.00091 101.003 4.25447V4.01947C101.003 3.93064 100.979 3.84347 100.933 3.76781C100.888 3.69214 100.822 3.631 100.744 3.59129C100.691 3.56626 100.633 3.55364 100.574 3.55438H98.9827C98.9241 3.55245 98.8658 3.56433 98.8125 3.58909C98.7592 3.61385 98.7122 3.65082 98.6753 3.69711C98.5956 3.78474 98.5523 3.90019 98.5542 4.01947V15.0561C98.5542 15.1791 98.5954 15.2874 98.6753 15.3735C98.715 15.4152 98.7629 15.4479 98.8158 15.4698C98.8688 15.4916 98.9256 15.502 98.9827 15.5002H100.606C100.661 15.5001 100.715 15.4889 100.766 15.4671C100.817 15.4453 100.863 15.4135 100.901 15.3735C100.945 15.3333 100.979 15.284 101.002 15.229C101.025 15.174 101.036 15.1146 101.034 15.0548V11.2898C101.25 11.5384 101.539 11.7291 101.884 11.8607C102.307 12.0256 102.755 12.1105 103.207 12.1105C103.727 12.1105 104.233 12.0096 104.71 11.8054C105.185 11.599 105.613 11.2958 105.969 10.9146C106.338 10.5135 106.628 10.0422 106.824 9.52669C107.044 8.94733 107.152 8.33033 107.143 7.70941C107.143 7.045 107.038 6.43349 106.824 5.89212C106.631 5.38011 106.341 4.91182 105.97 4.51409V4.51532ZM104.513 8.50178C104.424 8.73555 104.295 8.94718 104.131 9.12928C103.969 9.31219 103.77 9.45789 103.547 9.55674C103.325 9.65558 103.085 9.70531 102.842 9.70264C102.6 9.70387 102.358 9.65342 102.136 9.55499C101.911 9.4556 101.71 9.31074 101.542 9.12928C101.375 8.94704 101.244 8.73407 101.155 8.50178C101.062 8.25439 101.015 7.99155 101.016 7.72663C101.016 7.45102 101.064 7.19141 101.155 6.95026C101.332 6.48635 101.682 6.1122 102.128 5.90935C102.352 5.80353 102.595 5.7494 102.842 5.75063C103.103 5.75063 103.343 5.80476 103.56 5.91058C103.774 6.0127 103.969 6.15542 104.134 6.33014C104.476 6.71058 104.661 7.21105 104.648 7.72663C104.648 8.00347 104.603 8.26308 104.513 8.50178ZM115.859 3.55684H114.249C114.193 3.55751 114.138 3.56987 114.087 3.59315C114.036 3.61643 113.99 3.65013 113.952 3.69219C113.868 3.78 113.821 3.8973 113.821 4.01947V4.22371C113.62 3.9808 113.372 3.78302 113.092 3.64297C112.654 3.42397 112.17 3.31511 111.681 3.32553C111.166 3.32821 110.657 3.43439 110.183 3.63795C109.708 3.84151 109.278 4.13843 108.917 4.51162C108.537 4.91069 108.236 5.37962 108.029 5.89335C107.801 6.47081 107.687 7.08847 107.696 7.71064C107.696 8.37505 107.807 8.98655 108.029 9.52792C108.251 10.0619 108.545 10.5331 108.91 10.9158C109.265 11.2945 109.693 11.5958 110.167 11.8016C110.641 12.0074 111.15 12.1133 111.665 12.113C112.194 12.113 112.675 12.0047 113.085 11.7943C113.388 11.6343 113.637 11.4412 113.821 11.2148V11.4326C113.82 11.4923 113.831 11.5516 113.854 11.6066C113.877 11.6615 113.911 11.7109 113.954 11.7512C113.993 11.7915 114.038 11.8236 114.089 11.8456C114.14 11.8676 114.194 11.879 114.249 11.8792H115.859C115.916 11.8812 115.972 11.8706 116.024 11.8483C116.077 11.826 116.124 11.7925 116.162 11.75C116.203 11.7085 116.235 11.6589 116.256 11.6043C116.277 11.5497 116.287 11.4912 116.285 11.4326V4.0207C116.287 3.90142 116.244 3.78597 116.164 3.69834C116.127 3.65337 116.08 3.61736 116.027 3.5929C115.975 3.56844 115.917 3.55613 115.859 3.55684ZM113.685 8.4907C113.601 8.72324 113.473 8.9368 113.308 9.11943C113.143 9.29538 112.95 9.43933 112.735 9.54269C112.52 9.64727 112.275 9.70141 112.014 9.70141C111.764 9.70141 111.521 9.64727 111.3 9.54146C111.079 9.4398 110.881 9.29437 110.717 9.11372C110.552 8.93306 110.425 8.72082 110.343 8.48947C110.253 8.24551 110.207 7.98712 110.207 7.72663C110.207 7.44979 110.253 7.19018 110.343 6.94903C110.433 6.71156 110.562 6.50116 110.723 6.32891C110.888 6.15296 111.086 6.00901 111.301 5.90812C111.521 5.80353 111.764 5.7494 112.015 5.7494C112.275 5.7494 112.52 5.80353 112.735 5.90935C112.951 6.01393 113.144 6.15542 113.308 6.32891C113.65 6.70961 113.834 7.21001 113.821 7.7254C113.821 7.98993 113.776 8.24709 113.685 8.4907ZM131.919 7.49901C131.685 7.28955 131.417 7.12228 131.127 7.00439C130.828 6.88012 130.511 6.78169 130.177 6.71525L128.95 6.46425C128.635 6.40273 128.416 6.3203 128.293 6.21448C128.242 6.17732 128.201 6.12853 128.172 6.07209C128.144 6.01565 128.128 5.95315 128.128 5.88966C128.128 5.75432 128.204 5.64358 128.357 5.54269C128.523 5.43688 128.755 5.38274 129.042 5.38274C129.357 5.38274 129.669 5.44795 129.958 5.57591C130.252 5.70633 130.528 5.85398 130.769 6.01885C131.126 6.24893 131.43 6.21817 131.649 5.95364L132.238 5.25232C132.351 5.13393 132.416 4.97752 132.422 4.81307C132.422 4.65558 132.345 4.51162 132.198 4.3812C131.948 4.15481 131.553 3.91612 131.023 3.68234C130.494 3.44611 129.829 3.32553 129.042 3.32553C128.525 3.32553 128.049 3.39689 127.628 3.53716C127.205 3.67988 126.842 3.87674 126.547 4.12036C126.251 4.37136 126.017 4.66173 125.858 4.99763C125.699 5.33341 125.617 5.70154 125.618 6.07422C125.618 6.76324 125.82 7.32552 126.218 7.74509C126.615 8.15481 127.145 8.43411 127.796 8.56945L129.072 8.8549C129.435 8.93118 129.711 9.01731 129.889 9.11328C130.045 9.19572 130.119 9.31383 130.119 9.47871C130.119 9.62635 130.045 9.758 129.892 9.87735C129.731 10.0053 129.478 10.0681 129.139 10.0681C128.79 10.0717 128.445 9.99161 128.133 9.83429C127.836 9.68469 127.56 9.49515 127.312 9.27077C127.202 9.17922 127.076 9.1084 126.941 9.0616C126.788 9.01608 126.616 9.0653 126.419 9.22155L125.714 9.78876C125.509 9.96717 125.423 10.1825 125.461 10.431C125.496 10.6697 125.691 10.9158 126.055 11.1939C126.38 11.4313 126.798 11.6467 127.3 11.8312C127.803 12.017 128.391 12.113 129.059 12.113C129.596 12.113 130.092 12.0416 130.529 11.9013C130.967 11.7549 131.354 11.5593 131.668 11.3108C131.98 11.0724 132.231 10.7631 132.404 10.4077C132.576 10.0523 132.663 9.66076 132.659 9.26462C132.659 8.87212 132.595 8.52638 132.46 8.23601C132.331 7.95492 132.147 7.70366 131.919 7.49778V7.49901ZM138.958 9.51193C138.923 9.445 138.872 9.3882 138.809 9.34687C138.747 9.30555 138.675 9.28105 138.601 9.27569C138.451 9.27322 138.305 9.3222 138.186 9.41473C138.071 9.49101 137.946 9.55007 137.815 9.58821C137.649 9.64412 137.47 9.64967 137.3 9.60421C137.219 9.58443 137.144 9.54519 137.081 9.48978C137.005 9.42056 136.946 9.33472 136.908 9.23878C136.855 9.09669 136.83 8.94521 136.836 8.79338V5.76662H138.931C139.051 5.76662 139.159 5.71741 139.253 5.62267C139.295 5.58108 139.329 5.5314 139.352 5.4765C139.376 5.42159 139.388 5.36254 139.389 5.30276V4.02193C139.389 3.96024 139.377 3.89918 139.353 3.84249C139.329 3.78579 139.294 3.73465 139.25 3.69219C139.165 3.60724 139.05 3.55916 138.931 3.55807H136.835V1.49717C136.838 1.43555 136.827 1.37406 136.805 1.31679C136.782 1.25952 136.748 1.20777 136.704 1.16497C136.627 1.08454 136.521 1.03854 136.41 1.03701H134.784C134.695 1.03555 134.609 1.06135 134.535 1.11101C134.462 1.16066 134.405 1.23182 134.372 1.31507C134.349 1.37287 134.338 1.43484 134.339 1.49717V3.55684H133.411C133.353 3.55549 133.294 3.5675 133.241 3.59199C133.188 3.61647 133.14 3.65281 133.102 3.69834C133.025 3.78687 132.982 3.90193 132.984 4.0207V5.304C132.985 5.39177 133.01 5.47753 133.055 5.55238C133.1 5.62724 133.164 5.68846 133.24 5.72971C133.294 5.75555 133.352 5.76908 133.41 5.76662H134.339V9.36551C134.339 9.84536 134.423 10.2588 134.581 10.5996C134.741 10.9367 134.951 11.2197 135.204 11.4313C135.466 11.6503 135.766 11.8128 136.088 11.9087C136.415 12.0121 136.755 12.0638 137.096 12.0638C137.562 12.0638 138.004 11.9887 138.421 11.8423C138.817 11.7053 139.175 11.4722 139.463 11.1631C139.647 10.9404 139.668 10.6943 139.518 10.4483L138.958 9.51316V9.51193ZM147.78 3.55684H146.171C146.116 3.55785 146.061 3.57036 146.01 3.59363C145.959 3.6169 145.914 3.65043 145.876 3.69219C145.835 3.73558 145.802 3.78651 145.779 3.84229C145.758 3.89876 145.746 3.95885 145.747 4.01947V4.22371C145.544 3.98167 145.295 3.78409 145.014 3.64297C144.609 3.43011 144.136 3.32553 143.601 3.32553C143.092 3.32553 142.591 3.42765 142.117 3.6319C141.638 3.83631 141.204 4.13534 140.84 4.51162C140.46 4.9102 140.158 5.37925 139.952 5.89335C139.722 6.47038 139.608 7.08828 139.618 7.71064C139.618 8.37505 139.729 8.98655 139.95 9.52792C140.173 10.0619 140.468 10.5331 140.833 10.9158C141.188 11.2943 141.614 11.5956 142.087 11.8014C142.56 12.0072 143.069 12.1132 143.584 12.113C144.076 12.1217 144.563 12.0125 145.006 11.7943C145.314 11.6343 145.559 11.4412 145.747 11.2148V11.4326C145.745 11.4921 145.756 11.5513 145.778 11.6062C145.801 11.6612 145.834 11.7106 145.877 11.7512C145.916 11.7913 145.961 11.8232 146.012 11.8452C146.062 11.8671 146.116 11.8787 146.171 11.8792H147.78C147.837 11.8806 147.893 11.8699 147.946 11.8476C147.998 11.8254 148.046 11.7921 148.085 11.75C148.166 11.6649 148.21 11.5508 148.208 11.4326V4.0207C148.21 3.90149 148.167 3.78617 148.087 3.69834C148.049 3.65272 148.002 3.61618 147.948 3.59129C147.895 3.56679 147.838 3.555 147.78 3.55684ZM145.606 8.4907C145.437 8.95456 145.095 9.33232 144.655 9.54269C144.43 9.64997 144.184 9.70423 143.936 9.70141C143.685 9.70141 143.446 9.64727 143.224 9.54146C143.004 9.43906 142.806 9.2934 142.642 9.11285C142.477 8.9323 142.349 8.72044 142.266 8.48947C142.175 8.24565 142.129 7.98721 142.129 7.72663C142.129 7.44979 142.174 7.19018 142.264 6.94903C142.353 6.71894 142.481 6.50855 142.645 6.32891C142.812 6.15296 143.008 6.00901 143.224 5.90812C143.447 5.8023 143.69 5.74817 143.936 5.7494C144.199 5.7494 144.438 5.80353 144.655 5.90935C144.874 6.01393 145.066 6.15542 145.226 6.32891C145.388 6.50486 145.517 6.71402 145.606 6.94903C145.796 7.44486 145.796 7.99486 145.606 8.4907ZM156.622 9.40119L155.699 8.67157C155.522 8.52638 155.355 8.48701 155.21 8.54853C155.079 8.60436 154.964 8.69079 154.872 8.80076C154.673 9.05649 154.434 9.27863 154.167 9.45902C153.934 9.60913 153.629 9.68418 153.269 9.68418C153.004 9.68418 152.76 9.63496 152.542 9.53407C152.327 9.43495 152.134 9.2917 151.975 9.11328C151.812 8.93013 151.686 8.71715 151.602 8.48578C151.515 8.24262 151.471 7.98546 151.474 7.72663C151.474 7.4461 151.515 7.18772 151.602 6.94903C151.687 6.71279 151.811 6.50239 151.975 6.33014C152.138 6.15296 152.332 6.01024 152.546 5.90935C152.772 5.80107 153.019 5.74694 153.269 5.7494C153.629 5.7494 153.931 5.82814 154.167 5.97948C154.406 6.13451 154.646 6.35598 154.873 6.63651C154.968 6.7497 155.079 6.83337 155.21 6.88997C155.358 6.94903 155.523 6.90965 155.695 6.7657L156.618 6.03485C156.732 5.95424 156.817 5.83809 156.861 5.70387C156.886 5.63045 156.896 5.55227 156.889 5.47473C156.882 5.39719 156.858 5.32214 156.82 5.25478C156.464 4.67928 155.973 4.20275 155.391 3.86813C154.781 3.51009 154.05 3.32553 153.232 3.32553C152.668 3.32238 152.109 3.43311 151.588 3.65129C151.066 3.86947 150.593 4.19076 150.194 4.59652C149.805 4.99271 149.497 5.4701 149.29 5.99547C149.07 6.54494 148.957 7.13314 148.96 7.72663C148.96 8.33567 149.072 8.91765 149.29 9.45164C149.5 9.97332 149.807 10.4458 150.194 10.8395C150.593 11.2451 151.067 11.5663 151.588 11.7846C152.11 12.003 152.668 12.1142 153.232 12.1117C154.05 12.1117 154.781 11.9284 155.391 11.5654C155.976 11.232 156.468 10.7537 156.822 10.1751C156.86 10.1101 156.882 10.0374 156.889 9.96225C156.896 9.88643 156.886 9.80992 156.861 9.73832C156.813 9.60626 156.731 9.49007 156.622 9.40242V9.40119ZM165.194 11.1299L162.647 7.26277L164.827 4.29138C164.941 4.12036 164.971 3.95672 164.918 3.80292C164.88 3.69219 164.777 3.55684 164.514 3.55684H162.789C162.69 3.55775 162.593 3.58219 162.506 3.62821C162.398 3.68359 162.309 3.77173 162.253 3.88043L160.511 6.39904H160.089V0.447649C160.091 0.329229 160.048 0.214475 159.969 0.127748C159.929 0.0869473 159.881 0.0547186 159.828 0.0329554C159.776 0.0111921 159.719 0.000333517 159.663 0.00101762H158.051C157.964 0.00131009 157.88 0.0270233 157.807 0.0750545C157.735 0.123086 157.678 0.191382 157.643 0.271703C157.62 0.327334 157.608 0.387308 157.61 0.447649V11.4313C157.61 11.5581 157.656 11.6688 157.743 11.75C157.783 11.7911 157.831 11.8236 157.884 11.8456C157.937 11.8676 157.993 11.8786 158.051 11.878H159.664C159.721 11.8798 159.777 11.8692 159.83 11.8469C159.882 11.8246 159.929 11.7912 159.968 11.7488C160.007 11.7068 160.038 11.657 160.058 11.6024C160.08 11.5477 160.09 11.489 160.087 11.4301V8.52392H160.555L162.456 11.5335C162.592 11.7635 162.779 11.8792 163.013 11.8792H164.817C165.091 11.8792 165.205 11.7439 165.251 11.6307C165.316 11.4707 165.297 11.3083 165.194 11.1311V11.1299ZM125.015 3.55684H123.213C123.146 3.55424 123.079 3.56628 123.017 3.59218C122.954 3.61807 122.898 3.6572 122.852 3.70695C122.774 3.79331 122.72 3.89895 122.695 4.01332L121.365 9.14035H121.041L119.61 4.01332C119.586 3.90347 119.539 3.79998 119.473 3.70941C119.435 3.66072 119.386 3.62162 119.331 3.59516C119.276 3.5687 119.215 3.55559 119.154 3.55684H117.285C117.044 3.55684 116.892 3.63805 116.835 3.79431C116.786 3.94184 116.785 4.10149 116.832 4.24955L119.116 11.4658C119.152 11.5802 119.213 11.675 119.292 11.7512C119.337 11.7944 119.391 11.828 119.449 11.8499C119.507 11.8719 119.57 11.8818 119.632 11.8792H120.598L120.518 12.113L120.288 12.786C120.225 12.9927 120.103 13.1754 119.937 13.3101C119.784 13.4312 119.595 13.4954 119.402 13.4922C119.234 13.4914 119.069 13.4536 118.918 13.3815C118.768 13.312 118.625 13.2257 118.494 13.1243C118.375 13.0381 118.234 12.9889 118.089 12.9829H118.069C117.912 12.9829 117.775 13.0739 117.665 13.2486L117.091 14.1197C116.858 14.4938 116.987 14.7399 117.139 14.8764C117.422 15.152 117.778 15.3673 118.198 15.5211C118.614 15.6749 119.073 15.75 119.56 15.75C120.386 15.75 121.076 15.5199 121.605 15.0548C122.131 14.5922 122.52 13.9635 122.757 13.1797L125.405 4.24955C125.465 4.05884 125.465 3.90012 125.411 3.77093C125.366 3.6725 125.26 3.55684 125.015 3.55684Z\"\n  fill=\"#838383\"\n/>\n</svg>\n";

var _extends$2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof$1 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var loaderHTML = '\n  <!DOCTYPE html>\n  <html lang="en">\n\n  <head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Paystack Popup Loader</title>\n    <style>\n      .app-loader {\n        margin: 200px 0;\n        text-align: center;\n        color: white;\n      }      \n      @keyframes app-loader__spinner {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n        }\n      }\n      @-webkit-keyframes app-loader__spinner {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n        }\n      }\n      .app-loader__spinner {\n        position: relative;\n        display: inline-block;\n      }\n      .app-loader__spinner div {\n        left: 95px;\n        top: 35px;\n        position: absolute;\n        -webkit-animation: app-loader__spinner linear 1s infinite;\n        animation: app-loader__spinner linear 1s infinite;\n        background: white;\n        width: 10px;\n        height: 30px;\n        border-radius: 40%;\n        -webkit-transform-origin: 5px 65px;\n        transform-origin: 5px 65px;\n      }\n      .app-loader__spinner div:nth-child(1) {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n        -webkit-animation-delay: -0.916666666666667s;\n        animation-delay: -0.916666666666667s;\n      }\n      .app-loader__spinner div:nth-child(2) {\n        -webkit-transform: rotate(30deg);\n        transform: rotate(30deg);\n        -webkit-animation-delay: -0.833333333333333s;\n        animation-delay: -0.833333333333333s;\n      }\n      .app-loader__spinner div:nth-child(3) {\n        -webkit-transform: rotate(60deg);\n        transform: rotate(60deg);\n        -webkit-animation-delay: -0.75s;\n        animation-delay: -0.75s;\n      }\n      .app-loader__spinner div:nth-child(4) {\n        -webkit-transform: rotate(90deg);\n        transform: rotate(90deg);\n        -webkit-animation-delay: -0.666666666666667s;\n        animation-delay: -0.666666666666667s;\n      }\n      .app-loader__spinner div:nth-child(5) {\n        -webkit-transform: rotate(120deg);\n        transform: rotate(120deg);\n        -webkit-animation-delay: -0.583333333333333s;\n        animation-delay: -0.583333333333333s;\n      }\n      .app-loader__spinner div:nth-child(6) {\n        -webkit-transform: rotate(150deg);\n        transform: rotate(150deg);\n        -webkit-animation-delay: -0.5s;\n        animation-delay: -0.5s;\n      }\n      .app-loader__spinner div:nth-child(7) {\n        -webkit-transform: rotate(180deg);\n        transform: rotate(180deg);\n        -webkit-animation-delay: -0.416666666666667s;\n        animation-delay: -0.416666666666667s;\n      }\n      .app-loader__spinner div:nth-child(8) {\n        -webkit-transform: rotate(210deg);\n        transform: rotate(210deg);\n        -webkit-animation-delay: -0.333333333333333s;\n        animation-delay: -0.333333333333333s;\n      }\n      .app-loader__spinner div:nth-child(9) {\n        -webkit-transform: rotate(240deg);\n        transform: rotate(240deg);\n        -webkit-animation-delay: -0.25s;\n        animation-delay: -0.25s;\n      }\n      .app-loader__spinner div:nth-child(10) {\n        -webkit-transform: rotate(270deg);\n        transform: rotate(270deg);\n        -webkit-animation-delay: -0.166666666666667s;\n        animation-delay: -0.166666666666667s;\n      }\n      .app-loader__spinner div:nth-child(11) {\n        -webkit-transform: rotate(300deg);\n        transform: rotate(300deg);\n        -webkit-animation-delay: -0.083333333333333s;\n        animation-delay: -0.083333333333333s;\n      }\n      .app-loader__spinner div:nth-child(12) {\n        -webkit-transform: rotate(330deg);\n        transform: rotate(330deg);\n        -webkit-animation-delay: 0s;\n        animation-delay: 0s;\n      }\n      .app-loader__spinner {\n        width: 40px;\n        height: 40px;\n        -webkit-transform: translate(-20px, -20px) scale(0.2) translate(20px, 20px);\n        transform: translate(-20px, -20px) scale(0.2) translate(20px, 20px);\n      }\n    </style>\n  </head>\n\n  <body>\n    <div id="app-loader" class="app-loader">\n      <div id="spinner" class="app-loader__spinner">\n        <div></div><div></div><div></div><div></div><div></div><div></div><div>\n        </div><div></div><div></div><div></div><div></div><div></div>\n      </div>\n    </div>\n  </body>\n\n  </html>\n';

var backgroundCSS = '\n  z-index: 999999999999999;\n  background: transparent;\n  background: rgba(0, 0, 0, 0.75);    \n  border: 0px none transparent;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  margin: 0;\n  padding: 0;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  transition: opacity 0.3s;\n  -webkit-transition: opacity 0.3s;\n  visibility: hidden;\n  display: none;\n';

var checkoutCSS = '\n  z-index: 999999999999999;\n  background: transparent;\n  border: 0px none transparent;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  margin: 0;\n  padding: 0;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  visibility: hidden;\n  display: none;\n  height: 100%;\n';

var embedCSS = '\n  background: transparent;\n  background: rgba(0,0,0,0);\n  border: 0px none transparent;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  nmargin: 0;\n  padding: 0;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  visibility: hidden;\n  display: none;\n';

function generateInlineButtonCSS(variant) {
  var baseCSS = '\n    box-sizing: border-box;\n    display: inline-block;\n    line-height: 1;\n    white-space: nowrap;\n    margin: 0 0 10px;\n    text-align: center;\n    -webkit-appearance: none;\n    outline: none;\n    font-size: 14px;\n    font-weight: 600;\n    border-radius: 6px;\n    cursor: pointer;\n    padding: 16px 24px;\n    box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.15);\n    transition: all .3s ease;\n    border: none;\n    min-width: 190px;\n  ';
  var greenCSS = '\n    background: linear-gradient(180deg,#44b669 0,#40ad57);\n    text-shadow: 1px 1px 1px rgba(0,0,0,.1);\n    color: #ffffff;\n  ';
  var whiteCSS = '\n    background: white;\n    text-shadow: none;\n    color: #011b33;\n  ';
  var colorVariants = {
    normal: greenCSS,
    light: whiteCSS
  };
  return '' + baseCSS + colorVariants[variant];
}

function generateInlineButtonHTML(options) {
  var wordmarkVariants = {
    normal: secureByPaystack,
    light: secureByPaystackWhite
  };

  var buttonHTML = '\n    <style>\n      #inline-button-' + options.inlineId + ' {\n        position: relative;\n        text-align: center;\n        display: inline-block;\n      }\n      #inline-button-' + options.inlineId + '__trigger {\n        ' + generateInlineButtonCSS(options.variant || 'normal') + '\n      }\n      #inline-button-' + options.inlineId + '__trigger:hover {\n        box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.2);\n      }\n      #inline-button-' + options.inlineId + '__trigger:active {\n        transform: translateY(3px);\n      }\n    </style>\n    <button id="inline-button-' + options.inlineId + '__trigger" data-inline-id="' + options.inlineId + '">' + (options.text || 'Pay') + ' ' + (options.currency || 'NGN') + ' ' + options.amount + '</button>\n    <div id="inline-button-' + options.inlineId + '__wordmark">\n      ' + wordmarkVariants[options.wordmarkVariant || 'normal'] + '\n    </div>\n  ';

  return buttonHTML;
}

var defaultCustomApplePayStyles = { height: '50px', width: 'auto', borderRadius: '3px', type: 'pay', padding: '10px' };

var parseApplePayCustomStyles = function parseApplePayCustomStyles(styles) {
  if (!(styles && (typeof styles === 'undefined' ? 'undefined' : _typeof$1(styles)) === "object")) return defaultCustomApplePayStyles;

  var customStyles = Object.keys(defaultCustomApplePayStyles).reduce(function (newDefaultStyles, key) {
    return _extends$2({}, newDefaultStyles, _defineProperty({}, key, styles[key] || defaultCustomApplePayStyles[key]));
  }, {});

  return customStyles;
};

var generateApplePayCSS = function generateApplePayCSS(_ref) {
  var height = _ref.height,
      width = _ref.width,
      borderRadius = _ref.borderRadius,
      padding = _ref.padding;
  return '\n  apple-pay-button {\n    --apple-pay-button-width: ' + width + ';\n    --apple-pay-button-height: ' + height + ';\n    --apple-pay-button-border-radius: ' + borderRadius + ';\n    --apple-pay-button-padding: ' + padding + ';\n    --apple-pay-button-box-sizing: border-box;\n    width: ' + width + ';\n  }\n';
};

var generateApplePayFallbackCSS = function generateApplePayFallbackCSS(_ref2) {
  var height = _ref2.height,
      width = _ref2.width,
      borderRadius = _ref2.borderRadius,
      padding = _ref2.padding,
      type = _ref2.type;
  return '\n  @supports (-webkit-appearance: -apple-pay-button) { \n    .apple-pay-button {\n        display: inline-block;\n        -webkit-appearance: -apple-pay-button;\n        width: ' + width + ';\n        height: ' + height + ';\n        border-radius: ' + borderRadius + ';\n        padding: ' + padding + ';\n        -apple-pay-button-type: ' + type + ';    \n    }\n    .apple-pay-button-black {\n        -apple-pay-button-style: black;\n    }\n    .apple-pay-button-white {\n        -apple-pay-button-style: white;\n    }\n    .apple-pay-button-white-with-line {\n        -apple-pay-button-style: white-outline;\n    }\n  }\n\n  @supports not (-webkit-appearance: -apple-pay-button) {\n    .apple-pay-button {\n        display: inline-block;\n        background-size: 100% 60%;\n        background-repeat: no-repeat;\n        background-position: 50% 50%;\n        border-radius: 5px;\n        padding: 0px;\n        box-sizing: border-box;\n        min-width: 200px;\n        min-height: 32px;\n        max-height: 64px;\n    }\n    .apple-pay-button-black {\n        background-image: -webkit-named-image(apple-pay-logo-white);\n        background-color: black;\n    }\n    .apple-pay-button-white {\n        background-image: -webkit-named-image(apple-pay-logo-black);\n        background-color: white;\n    }\n    .apple-pay-button-white-with-line {\n        background-image: -webkit-named-image(apple-pay-logo-black);\n        background-color: white;\n        border: .5px solid black;\n    } \n  }\n';
};

var preCheckoutModalCSS = '\n\n  .pre-checkout-modal {\n    display: none;\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100vw;\n    height: 100%;\n    height: -webkit-fill-available;\n    overflow: auto;\n    background-color: rgba(0, 0, 0, 0.75);\n    transition: all 0.2s ease;\n  }\n\n  .pre-checkout-modal.show {\n    display: block;\n  }\n\n  .pre-checkout-modal__content {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin-left: auto;\n    margin-right: auto;\n    background-color: #fefefe;\n    padding: 30px 20px;\n    padding-bottom: max(30px, env(safe-area-inset-bottom));\n    width: 100%;\n    border-radius: 6px 6px 0 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    max-width: 500px;\n\n    box-sizing: border-box;\n    transform: translateY(238px);\n    transition: transform 0.3s cubic-bezier(.16,.81,.32,1);\n  }\n\n  @media only screen and (min-width: 500px) {\n    .pre-checkout-modal__content {\n      bottom: 0;\n      top: 0;\n      margin: auto;\n      border-radius: 6px;\n      height: fit-content;\n    }\n  }\n\n  .pre-checkout-modal__content.show {\n    transform: translateY(0);\n  }\n\n  .pre-checkout-modal__content > * {\n    margin-bottom: 20px;\n  }\n  .pre-checkout-modal__content > *:last-child {\n    margin-bottom: 0;\n  }\n\n  .pre-checkout-modal__content svg {\n    margin: auto;\n    margin-top: 0;\n    width: 100%;\n  }\n\n  .pre-checkout-modal button {\n    height: 64px;\n    width: 100%;\n    background: linear-gradient(180deg, #40ad57 21.43%, #44b669 88.1%), #44b669;\n    border: 1px solid #49a861;\n    box-sizing: border-box;\n    box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.1);\n    border-radius: 5px;\n    text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1);\n    color: #ffffff;\n    font-weight: 600;\n    font-size: 18px;\n\n    -webkit-text-size-adjust: 100%;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-rendering: optimizeLegibility;\n    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu",\n      "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;\n  }\n\n  #payment-request-button {\n    width: 100%;\n    height: fit-content;\n  }\n';

var amountSubunitToBase = function amountSubunitToBase() {
  var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  return Number(parseFloat(amount / 100).toFixed(2));
};

var _extends$3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var requestConfig = {
  headers: {
    accept: "application/json, text/plain, */*",
    "accept-language": "en-GB,en-US;q=0.9,en;q=0.8",
    "content-type": "application/x-www-form-urlencoded",
    "sec-ch-ua-mobile": "?0",
    "sec-fetch-dest": "empty",
    "sec-fetch-mode": "cors",
    "sec-fetch-site": "cross-site"
  },
  referrerPolicy: "no-referrer-when-downgrade",
  method: "POST",
  mode: "cors",
  credentials: "omit"
};

function createFormBody(params) {
  var formBody = [];
  for (var property in params) {
    var encodedKey = encodeURIComponent(property);
    var encodedValue = encodeURIComponent(params[property]);
    formBody.push(encodedKey + "=" + encodedValue);
  }

  formBody = formBody.join("&");

  return formBody;
}

var generateApplePaymentRequestObject = function generateApplePaymentRequestObject(_ref) {
  var currency = _ref.currency,
      amount = _ref.amount,
      merchantName = _ref.merchantName;

  return {
    countryCode: "NG",
    currencyCode: currency,
    merchantCapabilities: ["supports3DS", "supportsCredit", "supportsDebit"],
    supportedNetworks: ["visa", "masterCard"],
    requiredBillingContactFields: ["postalAddress", "name", "phone", "email"],
    total: {
      label: merchantName + " - Paystack",
      type: "final",
      amount: String(amountSubunitToBase(amount))
    }
  };
};

var validateApplePaySession = function validateApplePaySession(_ref2) {
  var transactionId = _ref2.transactionId,
      validationURL = _ref2.validationURL,
      merchantName = _ref2.merchantName,
      _ref2$domainName = _ref2.domainName,
      domainName = _ref2$domainName === undefined ? window && window.location && window.location.hostname : _ref2$domainName;

  var validateSessionUrl = "" + config.paymentBaseUrl + config.applePayValidateSessionPath;

  var params = {
    transaction: transactionId,
    sessionUrl: validationURL,
    displayName: merchantName,
    domainName: domainName
  };

  var formBody = createFormBody(params);

  var validateSession = fetch(validateSessionUrl, _extends$3({}, requestConfig, {
    body: formBody
  })).then(function (response) {
    return response.json();
  });

  return validateSession;
};

var chargeApplePay = function chargeApplePay(_ref3) {
  var transactionId = _ref3.transactionId,
      payment = _ref3.payment;

  var chargeApplePayUrl = "" + config.paymentBaseUrl + config.applePayChargePath;

  var params = {
    transaction: transactionId,
    paymentObject: JSON.stringify(payment)
  };

  var formBody = createFormBody(params);

  var charge = fetch(chargeApplePayUrl, _extends$3({}, requestConfig, {
    body: formBody
  })).then(function (response) {
    return response.json();
  });

  return charge;
};

var canUseApplePay = function canUseApplePay() {
  var channels = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  return deviceSupportsApplePay() && channels.includes("apple_pay");
};

var deviceSupportsApplePay = function deviceSupportsApplePay() {
  return location && location.protocol === "https:" && window.ApplePaySession && window.ApplePaySession.supportsVersion(config.applePayVersion);
};

/* eslint-env browser */
function findHighestZIndex() {
  return Array.from(document.querySelectorAll('body *')).map(function (a) {
    return parseFloat(window.getComputedStyle(a).zIndex);
  }).filter(function (a) {
    return !Number.isNaN(a);
  }).sort().pop();
}

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

function createIframe(id) {
  var iframe = document.createElement('iframe');
  iframe.setAttribute('frameBorder', '0');
  iframe.setAttribute('allowtransparency', 'true');
  iframe.id = id;
  iframe.style.display = 'none';
  return iframe;
}

function mountCheckoutIframe(id) {
  var iframe = createIframe('inline-checkout-' + id);
  iframe.src = config.checkoutUrl + 'popup';
  iframe.style.cssText = checkoutCSS;
  iframe.setAttribute('allowpaymentrequest', 'true');
  document.body.appendChild(iframe);
  return iframe;
}

function mountBackgroundIframe(id) {
  var iframe = createIframe('inline-background-' + id);
  iframe.style.cssText = backgroundCSS;
  document.body.appendChild(iframe);
  var bgWindow = iframe.contentWindow.document;
  bgWindow.open();
  bgWindow.write(loaderHTML);
  bgWindow.close();
  return iframe;
}

function mountEmbedCheckoutIframe(id, src) {
  var iframe = createIframe('embed-checkout-' + id);
  iframe.style.cssText = embedCSS;
  iframe.src = src;
  iframe.id = iframe.name = id;
  return iframe;
}

function appendIframeToContainer(containerId, iframe) {
  var container = document.getElementById(containerId);
  container.innerHTML = "";
  container.removeAttribute("style");
  container.className = "paystack-embed-container";
  container.style.position = "relative";
  container.style.width = "100%";
  container.appendChild(iframe);
}

function hideLoader(iframe) {
  var bgWindow = iframe.contentWindow.document;
  if (bgWindow) bgWindow.getElementById('app-loader').style.display = 'none';
}

function animateCheckoutIn(domElements) {
  return new Promise(function (resolve, reject) {
    if (!domElements) reject('No dom element provided');
    var checkoutIframe = domElements.checkoutIframe,
        backgroundIframe = domElements.backgroundIframe;

    if (!checkoutIframe || !backgroundIframe) reject('No dom element provided');
    checkoutIframe.style.display = '';
    checkoutIframe.style.visibility = 'visible';
    backgroundIframe.style.display = '';
    backgroundIframe.style.visibility = 'visible';
    resolve();
  });
}

function animateCheckoutOut(domElements) {
  return new Promise(function (resolve, reject) {
    if (!domElements) reject('No dom element provided');
    var checkoutIframe = domElements.checkoutIframe,
        backgroundIframe = domElements.backgroundIframe;

    if (!checkoutIframe || !backgroundIframe) reject('No dom element provided');
    backgroundIframe.style.opacity = 0;
    checkoutIframe.style.display = 'none';
    checkoutIframe.style.visibility = 'hidden';
    setTimeout(function () {
      backgroundIframe.style.display = 'none';
      backgroundIframe.style.visibility = 'hidden';
      backgroundIframe.style.opacity = 1;
      resolve();
    }, 300);
  });
}

function mountLazyInlineButton(options) {
  var inlineButton = void 0;
  if (options.id) {
    inlineButton = document.getElementById(options.id);
    inlineButton.setAttribute('data-inline-id', options.id);
  } else {
    var inlineDiv = document.createElement('div');
    inlineDiv.id = 'inline-button-' + options.inlineId;
    inlineDiv.innerHTML = generateInlineButtonHTML(options);
    options.parent.parentNode.insertBefore(inlineDiv, options.parent.nextSibling);

    var _inlineDiv$getElement = inlineDiv.getElementsByTagName('button');

    var _inlineDiv$getElement2 = _slicedToArray(_inlineDiv$getElement, 1);

    inlineButton = _inlineDiv$getElement2[0];
  }
  return inlineButton;
}

function animateEmbedCheckoutIn(checkoutIframe) {
  return new Promise(function (resolve, reject) {
    if (!checkoutIframe) reject('No dom element provided');
    checkoutIframe.style.display = '';
    checkoutIframe.style.visibility = 'visible';
    resolve();
  });
}

function mountInput(config$$1) {
  var type = config$$1.type,
      value = config$$1.value,
      name = config$$1.name,
      parent = config$$1.parent;

  var input = document.createElement('input');
  input.type = type;
  input.value = value;
  input.name = name;
  parent.appendChild(input);
}

function mountApplePayButton(container, _ref) {
  var styles = _ref.styles,
      theme = _ref.theme;

  var style = document.createElement('style');
  var applePayCSS = generateApplePayCSS(styles);
  style.type = 'text/css';
  if (style.styleSheet) {
    style.styleSheet.cssText = applePayCSS;
  } else {
    style.appendChild(document.createTextNode(applePayCSS));
  }
  container.appendChild(style);

  var button = document.createElement("apple-pay-button");
  button.setAttribute("buttonstyle", theme === "light" ? "white" : "black");
  button.setAttribute("type", styles.type);
  button.setAttribute("locale", "en");
  container.appendChild(button);
}

function mountApplePayFallbackButton(container, _ref2) {
  var styles = _ref2.styles,
      theme = _ref2.theme;

  var style = document.createElement('style');
  var applePayCSS = generateApplePayFallbackCSS(styles);
  style.type = 'text/css';
  if (style.styleSheet) {
    style.styleSheet.cssText = applePayCSS;
  } else {
    style.appendChild(document.createTextNode(applePayCSS));
  }
  container.appendChild(style);

  var button = document.createElement("button");
  button.classList.add('apple-pay-button', theme === "light" ? 'apple-pay-button-white' : 'apple-pay-button-black');
  button.id = "apple-pay-button";

  var applePayLogo = document.createElement("span");
  applePayLogo.classList.add("logo");
  button.appendChild(applePayLogo);

  container.appendChild(button);
}

function getPaymentRequestContainer(container) {
  return document.querySelector('#' + container);
}

function mountPaymentRequestButtons(container, _ref3) {
  var _ref3$channels = _ref3.channels,
      channels = _ref3$channels === undefined ? [] : _ref3$channels,
      _ref3$styles = _ref3.styles,
      styles = _ref3$styles === undefined ? {} : _ref3$styles;


  var mountedElements = { applePay: false };

  return new Promise(function (resolve, reject) {
    if (container) {
      if (canUseApplePay(channels)) {
        if (getApplePayButton(container)) {
          mountedElements.applePay = true;
          resolve(mountedElements);
          return;
        }

        loadScript('https://applepay.cdn-apple.com/jsapi/v1/apple-pay-sdk.js', container).then(function () {
          mountApplePayButton(container, { styles: parseApplePayCustomStyles(styles.applePay), theme: styles.theme });
          mountedElements.applePay = true;
          resolve(mountedElements);
        }).catch(function () {
          // if the loading of the apple pay SDK fails, that means using the apple-pay-button web component won't work
          // so custom styled apple pay button is mounted instead. See documentation here https://developer.apple.com/documentation/apple_pay_on_the_web/displaying_apple_pay_buttons_using_css
          mountApplePayFallbackButton(container, { styles: parseApplePayCustomStyles(styles.applePay), theme: styles.theme });
          mountedElements.applePay = true;
          resolve(mountedElements);
        });
      } else {
        reject("No wallet payment method is available on this device");
      }
    } else {
      reject("Container to mount elements was not provided");
    }
  });
}

function getApplePayButton(container) {
  return container.querySelector("apple-pay-button") || container.querySelector("#apple-pay-button");
}

function removeAllChildNodes(parent) {
  while (parent.firstChild) {
    parent.removeChild(parent.firstChild);
  }
}

function mountPreCheckoutModal(id) {

  var mountedModal = document.querySelector('#pre-checkout-modal-' + id);
  if (mountedModal) {
    if (getPreCheckoutModalOpenPaystackPopButton(mountedModal) && getPreCheckoutModalPaymentRequestContainer(mountedModal)) {
      return mountedModal;
    } else {
      mountedModal.remove();
    }
  }

  var modal = document.createElement("div");
  modal.classList.add("pre-checkout-modal");
  modal.id = 'pre-checkout-modal-' + id;
  modal.style.zIndex = findHighestZIndex() + 1;

  var content = document.createElement("div");
  content.classList.add("pre-checkout-modal__content");
  modal.appendChild(content);

  var paymentButtonContainer = document.createElement("div");
  paymentButtonContainer.id = "payment-request-button";
  content.appendChild(paymentButtonContainer);

  var openPaystackPopButton = document.createElement("button");
  openPaystackPopButton.id = "paystackpop-button";
  openPaystackPopButton.innerText = "More payment options";
  content.appendChild(openPaystackPopButton);

  content.innerHTML = content.innerHTML + secureByPaystackGrey;

  var style = document.createElement("style");
  style.textContent = preCheckoutModalCSS;

  document.body.appendChild(style);
  document.body.appendChild(modal);

  return modal;
}

function getPreCheckoutModalOpenPaystackPopButton(modal) {
  return modal.querySelector("#paystackpop-button");
}

function getPreCheckoutModalPaymentRequestContainer(modal) {
  return modal.querySelector("#payment-request-button");
}

function animatePreCheckoutModalIn(modal) {
  return new Promise(function (resolve, reject) {
    try {
      var modalContent = modal.querySelector(".pre-checkout-modal__content");
      modal.classList.add("show");
      setTimeout(function () {
        modalContent.classList.add("show");
        resolve(true);
      }, 50);
    } catch (error) {
      reject(error);
    }
  });
}

function hidePreCheckoutModal(modal) {
  if (modal) {
    var modalContent = modal.querySelector(".pre-checkout-modal__content");
    modalContent.classList.remove("show");
    modal.classList.remove("show");
  }
}

var loadScript = function loadScript(url, container) {
  return new Promise(function (resolve, reject) {
    if (!url) reject("No script url");

    var script = document.createElement("script");
    script.src = url;
    script.addEventListener("load", function () {
      resolve(true);
    });
    script.addEventListener("error", function () {
      reject(false);
    });
    if (container) {
      container.appendChild(script);
    } else {
      document.head.appendChild(script);
    }
  });
};

var _typeof$2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var allParameters = [{ value: 'key', required: true, types: ['string'] }, { value: 'amount', required: true, or: ['plan', 'planCode'], types: ['string', 'number'] }, { value: 'currency', required: false, types: ['string'] }, { value: 'email', required: true, or: ['customerCode'], types: ['string'] }, { value: 'label', required: false, types: ['string'] }, { value: 'firstName', required: false, types: ['string'] }, { value: 'lastName', required: false, types: ['string'] }, { value: 'reference', required: false, types: ['string'] }, { value: 'phone', required: false, types: ['string'] }, { value: 'customerCode', required: false, override: 'email', types: ['string'] }, { value: 'channels', required: false, types: ['array'] }, { value: 'paymentRequest', required: false, types: ['string', 'number'] }, { value: 'paymentPage', required: false, types: ['string'] }, { value: 'hash', required: false, types: ['string'] }, { value: 'container', required: false, types: ['string'] }, { value: 'metadata', required: false, types: ['object'] }, { value: 'subaccountCode', required: false, types: ['string'] }, { value: 'bearer', required: false, types: ['string'] }, { value: 'transactionCharge', required: false, types: ['string', 'number'] }, { value: 'planCode', required: false, override: 'amount', types: ['string'] }, { value: 'subscriptionCount', required: false, types: ['number'] }, { value: 'planInterval', required: false, types: ['string'] }, { value: 'subscriptionLimit', required: false, types: ['number'] }, { value: 'subscriptionStartDate', required: false, types: ['string'] }, { value: 'accessCode', required: false, types: ['string'] }, { value: 'onError', required: false, types: ['function'] }, { value: 'onLoad', required: false, types: ['function'] }, { value: 'onSuccess', required: false, types: ['function'] }, { value: 'onCancel', required: false, types: ['function'] }, { value: 'callback', required: false, types: ['function'] }, { value: 'onClose', required: false, types: ['function'] }, { value: 'onBankTransferConfirmationPending', required: false, types: ['function'] }, { value: 'firstname', required: false, types: ['string'] }, { value: 'lastname', required: false, types: ['string'] }, { value: 'customer_code', required: false, types: ['string'] }, { value: 'payment_request', required: false, types: ['string', 'number'] }, { value: 'subaccount', required: false, types: ['string'] }, { value: 'transaction_charge', required: false, types: ['number', 'string'] }, { value: 'plan', required: false, types: ['string'] }, { value: 'quantity', required: false, types: ['number'] }, { value: 'interval', required: false, types: ['string'] }, { value: 'invoice_limit', required: false, types: ['number', 'string'] }, { value: 'start_date', required: false, types: ['string'] }, { value: 'payment_page', required: false, types: ['number', 'string'] }, { value: 'order_id', required: false, types: ['number'] }, { value: 'ref', required: false, types: ['string'] }, { value: 'card', required: false, types: ['string'] }, { value: 'bank', required: false, types: ['string'] }, { value: 'split', required: false, types: ['object'] }, { value: 'split_code', required: false, types: ['string'] }, { value: 'transaction_type', required: false, types: ['string'] }, { value: 'subscription', required: false, types: ['number'] }];

function validate(args) {
  function ValidationError(message, issues) {
    this.message = message;
    this.issues = issues || [];
  }

  if (!args || (typeof args === 'undefined' ? 'undefined' : _typeof$2(args)) !== 'object') {
    throw new ValidationError('Transaction parameters should be a non-empty object');
  }

  var transactionParameters = args;

  // If it's a transaction resumption, move on
  if ('accessCode' in transactionParameters) {
    var accessCode = transactionParameters.accessCode;

    return { accessCode: accessCode };
  }

  // Filter unneeded parameters
  Object.keys(transactionParameters).forEach(function (key) {
    var usedParameter = allParameters.find(function (parameter) {
      return parameter.value === key;
    }) !== undefined;
    if (!usedParameter) delete transactionParameters[key];
  });

  var transactionKeys = Object.keys(transactionParameters);
  var validationErrors = [];

  // Check for required parameters
  var requiredParameters = allParameters.filter(function (param) {
    return param.required;
  });
  requiredParameters.forEach(function (key) {
    var parameterIsMissing = !transactionParameters[key.value];
    var parameterHasAlternative = key.or ? key.or.some(function (option) {
      return transactionParameters[option];
    }) : null;

    if (parameterIsMissing && !parameterHasAlternative) {
      validationErrors.push({
        message: 'Required parameter missing: ' + key.value
      });
    }
  });

  // Check for validity
  transactionKeys.forEach(function (key) {
    var parameterValue = transactionParameters[key];
    var parameterObject = allParameters.find(function (parameter) {
      return parameter.value === key;
    });
    var providedType = typeof parameterValue === 'undefined' ? 'undefined' : _typeof$2(parameterValue);
    if (providedType === 'object' && Array.isArray(parameterValue)) {
      providedType = 'array';
    }
    var invalidType = parameterObject.types.indexOf(providedType) <= -1;
    if (invalidType) {
      validationErrors.push({
        message: 'Invalid parameter type: ' + key,
        validTypes: parameterObject.types
      });
    }
  });

  // Override keys where necessary
  transactionKeys.forEach(function (key) {
    var parameterObject = allParameters.find(function (parameter) {
      return parameter.value === key;
    });
    if (parameterObject.override) delete transactionParameters[parameterObject.override];
  });

  if (validationErrors.length) {
    throw new ValidationError('Invalid transaction parameters', validationErrors);
  }

  return transactionParameters;
}

/* eslint-env browser */
function getReferrer() {
  var href = window.location.href;

  if (href && href.length > 500) {
    return href.split('?')[0];
  }
  return href;
}

/* eslint-env browser */

function buildQuery(parameters) {
  var formattedParameters = Object.assign({}, parameters);
  formattedParameters.metadata = parameters.metadata || {};
  formattedParameters.metadata.referrer = getReferrer();
  formattedParameters.metadata = JSON.stringify(formattedParameters.metadata);
  formattedParameters.mode = 'popup';

  if (parameters.split && typeof parameters.split !== 'string') {
    formattedParameters.split = JSON.stringify(formattedParameters.split);
  }

  var parametersToChange = [{ to: 'firstname', from: 'firstName' }, { to: 'lastname', from: 'lastName' }, { to: 'customer_code', from: 'customerCode' }, { to: 'payment_request', from: 'paymentRequest' }, { to: 'subaccount', from: 'subaccountCode' }, { to: 'transaction_charge', from: 'transactionCharge' }, { to: 'plan', from: 'planCode' }, { to: 'quantity', from: 'subscriptionCount' }, { to: 'interval', from: 'planInterval' }, { to: 'invoice_limit', from: 'subscriptionLimit' }, { to: 'start_date', from: 'subscriptionStartDate' }, { to: 'ref', from: 'reference' }];

  // handle very old case of people disabling channels by sending card/bank params

  if (formattedParameters.card !== undefined && ['false', false].indexOf(formattedParameters.card) > -1) {
    formattedParameters.channels = ['bank'];
    delete formattedParameters.card;
  }

  if (formattedParameters.bank !== undefined && ['false', false].indexOf(formattedParameters.bank) > -1) {
    formattedParameters.channels = ['card'];
    delete formattedParameters.bank;
  }

  parametersToChange.forEach(function (key) {
    var hasValue = formattedParameters[key.from];
    if (hasValue) {
      formattedParameters[key.to] = formattedParameters[key.from];
      delete formattedParameters[key.from];
    }
  });

  Object.values(parameters).forEach(function (value, index) {
    if (typeof value === 'function') {
      var key = Object.keys(parameters)[index];
      delete formattedParameters[key];
    }
  });

  return formattedParameters;
}

function serializeRequestParameters(parameters) {
  var requestParameters = Object.assign({}, parameters);

  if (requestParameters.channels && Array.isArray(requestParameters.channels)) {
    requestParameters.channels = JSON.stringify(requestParameters.channels);
  }

  var serializedString = serialize(requestParameters);

  return serializedString;
}

var iOSDevices = ["iPad Simulator", "iPhone Simulator", "iPod Simulator", "iPad", "iPhone", "iPod"];

var isIOS = function isIOS() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$platform = _ref.platform,
      platform = _ref$platform === undefined ? window && window.navigator && window.navigator.platform : _ref$platform,
      _ref$userAgent = _ref.userAgent,
      userAgent = _ref$userAgent === undefined ? window && window.navigator && window.navigator.userAgent : _ref$userAgent;

  return iOSDevices.includes(platform) ||
  // iPAD os safari detection. iPad OS uses the same version of safari as Mac OS
  userAgent.includes("Mac") && "ontouchend" in document;
};

var AnalyticsAPI = {
  saveLog: function saveLog(transactionId, merchantPublicKey, log) {
    var url = config.paystackApiUrl + "transaction/update_log/" + transactionId;
    var headers = {
      Authorization: "Bearer " + merchantPublicKey
    };
    return fetch(url, {
      method: "POST",
      body: JSON.stringify({ payload: JSON.stringify(log) }),
      headers: headers
    });
  },
  saveIp: function saveIp(transactionId, merchantPublicKey) {
    var url = config.paystackApiUrl + "transaction/set_ip/" + transactionId;
    var headers = {
      Authorization: "Bearer " + merchantPublicKey
    };
    return fetch(url, { method: "POST", headers: headers });
  }
};

var AnalyticsFunctions = {
  initializeLog: function initializeLog(log) {
    var _ref = log || {},
        attempts = _ref.attempts,
        authentication = _ref.authentication,
        errors = _ref.errors,
        history = _ref.history;

    this.log = {
      start_time: Math.round(Date.now() / 1000),
      time_spent: 0,
      attempts: attempts || 0,
      authentication: authentication,
      errors: errors || 0,
      success: false,
      mobile: isIOS(),
      input: [],
      history: history || []
    };
  },
  getTimeSpent: function getTimeSpent() {
    var currentTimeInSeconds = Math.round(Date.now() / 1000);
    this.log.time_spent = currentTimeInSeconds - this.log.start_time;
    return this.log.time_spent;
  },
  logAPIResponse: function logAPIResponse(response, channel) {
    switch (response.status) {
      case 'success':
        return this.logApiSuccess(channel);
      case 'failed':
        return this.logApiError(response.message);
      default:
        return false;
    }
  },
  logValidationResponse: function logValidationResponse(message) {
    this.log.history.push({
      type: 'action',
      message: message,
      time: this.getTimeSpent()
    });
    return this.saveLog();
  },
  logAttempt: function logAttempt(channel) {
    var message = 'Attempted to pay';
    if (channel) message += ' with ' + channel;
    this.log.attempts += 1;
    this.log.history.push({
      type: 'action',
      message: message,
      time: this.getTimeSpent()
    });
    return this.saveLog();
  },
  logApiError: function logApiError(error) {
    var message = 'Error';
    if (error) message += ': ' + error;
    this.log.errors += 1;
    this.log.history.push({
      type: 'error',
      message: message,
      time: this.getTimeSpent()
    });
    return this.saveLog();
  },
  logApiSuccess: function logApiSuccess(channel) {
    var message = 'Successfully paid';
    if (channel) message += ' with ' + channel;
    this.log.success = true;
    this.log.history.push({
      type: 'success',
      message: message,
      time: this.getTimeSpent()
    });
    return this.saveLog();
  },
  saveLog: function saveLog() {
    try {
      if (this.response) {
        return AnalyticsAPI.saveLog(this.id, this.response.merchant_key, this.log);
      }
    } catch (error) {
      // we don't need to do anything since this should not affect the transaction
    }
  },
  saveIpAddress: function saveIpAddress() {
    try {
      if (this.response) {
        return AnalyticsAPI.saveIp(this.id, this.response.merchant_key);
      }
    } catch (error) {
      // we don't need to do anything since this should not affect the transaction
    }
  }
};

var TransactionApi = {
  requestInline: function requestInline() {
    var inlineTransactionInstance = this;

    var url = config.paystackApiUrl + "checkout/request_inline?" + serializeRequestParameters(this.urlParameters);

    if (this.accessCode) {
      url = config.paystackApiUrl + "transaction/verify_access_code/" + this.accessCode;
    }

    return fetch(url, {
      headers: {
        "Content-Type": "application/json"
      }
    }).then(function (res) {
      return res.json();
    }).then(function (res) {
      if (res.status === false) throw new Error(res.message);
      inlineTransactionInstance.response = res.data;
      inlineTransactionInstance.id = res.data.id;
      inlineTransactionInstance.status = res.data.transaction_status;
      inlineTransactionInstance.accessCode = res.data.access_code;

      // Analytics
      inlineTransactionInstance.log = null;
      Object.assign(inlineTransactionInstance, AnalyticsFunctions);
      inlineTransactionInstance.initializeLog(res.data.log);
      inlineTransactionInstance.saveIpAddress();

      return res.data;
    });
  }
};

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var InlineTransaction = function () {
  function InlineTransaction(data) {
    _classCallCheck(this, InlineTransaction);

    validate(data);
    this.parameters = data;
    this.urlParameters = buildQuery(data);
    this.id = null;
    this.status = null;
    this.accessCode = null;
    this.authorizationUrl = null;
    this.errors = [];
    this.response = null;
    this.isActive = true;
    var onError = data.onError,
        onLoad = data.onLoad,
        onSuccess = data.onSuccess,
        onCancel = data.onCancel,
        callback = data.callback,
        onClose = data.onClose,
        onBankTransferConfirmationPending = data.onBankTransferConfirmationPending;

    this.callbacks = { onError: onError, onLoad: onLoad, onSuccess: onSuccess, onCancel: onCancel, onBankTransferConfirmationPending: onBankTransferConfirmationPending };
    this.deprecatedCallbacks = { callback: callback, onClose: onClose };

    Object.assign(this, TransactionApi);
  }

  _createClass(InlineTransaction, [{
    key: 'onSetupError',
    value: function onSetupError(response) {
      this.logError(response);
      if (this.callbacks.onError) this.callbacks.onError(response);
    }
  }, {
    key: 'onLoad',
    value: function onLoad(response) {
      var id = response.id,
          customer = response.customer,
          accessCode = response.accessCode;

      Object.assign(this, { id: id, customer: customer, accessCode: accessCode });
      this.authorizationUrl = '' + config.checkoutUrl + accessCode;
      if (this.callbacks.onLoad) this.callbacks.onLoad({ id: id, customer: customer, accessCode: accessCode });
    }
  }, {
    key: 'onSuccess',
    value: function onSuccess(response) {
      this.isActive = false;
      this.response = response;
      this.status = response.status;
      if (this.callbacks.onSuccess) this.callbacks.onSuccess(response);
      if (this.deprecatedCallbacks.callback) this.deprecatedCallbacks.callback(response); //added for backwards compatibility
    }
  }, {
    key: 'setStatus',
    value: function setStatus(status) {
      this.status = status;
    }
  }, {
    key: 'onCancel',
    value: function onCancel() {
      if (this.callbacks.onCancel) this.callbacks.onCancel();
      if (this.deprecatedCallbacks.onClose) this.deprecatedCallbacks.onClose(); //added for backwards compatibility
    }
  }, {
    key: 'cancel',
    value: function cancel() {
      this.isActive = false;
      if (this.callbacks.onCancel) this.callbacks.onCancel();
      if (this.deprecatedCallbacks.onClose) this.deprecatedCallbacks.onClose(); //added for backwards compatibility
    }
  }, {
    key: 'onBankTransferConfirmationPending',
    value: function onBankTransferConfirmationPending() {
      this.cancel();
      if (this.callbacks.onBankTransferConfirmationPending) {
        this.callbacks.onBankTransferConfirmationPending();
      }
    }
  }, {
    key: 'logError',
    value: function logError(error) {
      this.errors.push(error);
    }
  }]);

  return InlineTransaction;
}();

var logWarning = console ? console.warn || console.log : function () {};

function printDeprecationNotice(oldName, newName, extraMessage) {
  logWarning('"' + oldName + '" has been deprecated, please use "' + newName + '". ' + (extraMessage || ''));
}

var _extends$4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass$1 = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck$1(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var inlineInstance = void 0;
var paymentRequestInlineInstance = void 0;

function findResumableTransaction(transactions, parameters) {
  if (!transactions.length) return null;

  var similarAbandonedTransactions = transactions.filter(function (transaction) {
    var isAbandoned = !transaction.status || transaction.status === 'abandoned';
    var hasSimilarParameters = similarObjects(transaction.parameters, parameters);
    return isAbandoned && hasSimilarParameters;
  });
  var resumableTransaction = similarAbandonedTransactions.length ? similarAbandonedTransactions[similarAbandonedTransactions.length - 1] : null;
  return resumableTransaction;
}

function notifyIframeToUpdateURL(config$$1) {
  var checkoutIframe = config$$1.checkoutIframe,
      urlParameters = config$$1.urlParameters;

  if (!checkoutIframe || !urlParameters) return;
  checkoutIframe.contentWindow.postMessage({
    type: 'inline:url',
    path: 'newTransaction',
    params: urlParameters
  }, '*');
}

// TODO: Remove old payment request API
var oldPaymentRequestApi = {
  oldRegisterApplePayEventListener: function oldRegisterApplePayEventListener() {
    var applePayButton = getApplePayButton(paymentRequestInlineInstance.paymentRequestContainer);
    applePayButton.onclick = function () {
      return paymentRequestInlineInstance.oldStartApplePay();
    };
  },
  oldRegisterPaymentRequestEventListeners: function oldRegisterPaymentRequestEventListeners() {
    var transaction = paymentRequestInlineInstance.paymentRequestTransaction;
    if (transaction) {
      if (canUseApplePay(transaction.response.channels)) {
        paymentRequestInlineInstance.oldRegisterApplePayEventListener();
      } else {
        removeAllChildNodes(paymentRequestInlineInstance.paymentRequestContainer);
        transaction.cancel();
      }
    } else {
      removeAllChildNodes(paymentRequestInlineInstance.paymentRequestContainer);
    }
  },
  oldStartApplePay: function oldStartApplePay() {
    var paymentMethod = "apple pay";

    var transaction = paymentRequestInlineInstance.paymentRequestTransaction;
    if (transaction) {
      try {
        transaction.logAttempt(paymentMethod);

        var applePayPaymentRequest = generateApplePaymentRequestObject({
          currency: transaction.response.currency,
          amount: transaction.response.amount,
          merchantName: transaction.response.merchant_name
        });

        var applePaySession = new window.ApplePaySession(config.applePayVersion, applePayPaymentRequest);

        applePaySession.onvalidatemerchant = function (_ref) {
          var validationURL = _ref.validationURL;


          var validateSession = validateApplePaySession({
            validationURL: validationURL,
            transactionId: transaction.id,
            merchantName: transaction.response.merchant_name
          });

          validateSession.then(function (response) {
            if (response.status !== "success") {
              transaction.onSetupError(response);
            } else {
              applePaySession.completeMerchantValidation(response.data);
            }
            transaction.logValidationResponse(response.message);
          }).catch(function (error) {
            transaction.onSetupError(error);
          });
        };

        applePaySession.oncancel = function () {
          if (!paymentRequestInlineInstance.preCheckoutModal) {
            transaction.onCancel();
          }
        };

        applePaySession.onpaymentauthorized = function (_ref2) {
          var payment = _ref2.payment;


          var charge = chargeApplePay({
            transactionId: transaction.id,
            payment: payment
          });
          charge.then(function (response) {
            transaction.logAPIResponse(response, paymentMethod);

            if (response.status === 'success') {
              applePaySession.completePayment(applePaySession.STATUS_SUCCESS);
              transaction.onSuccess(response);
            } else {
              applePaySession.completePayment(applePaySession.STATUS_FAILURE);
              transaction.onSetupError(response);
            }

            paymentRequestInlineInstance.closePreCheckoutModal();
          }).catch(function (error) {
            applePaySession.completePayment(applePaySession.STATUS_FAILURE);
            transaction.onSetupError(error);

            paymentRequestInlineInstance.closePreCheckoutModal();
          });
        };
        applePaySession.begin();
      } catch (error) {
        transaction.onSetupError(error);
      }
    } else {
      paymentRequestInlineInstance.handleError("Could not initiate apple pay transaction");
    }
  }
};

var Inline = function () {
  function Inline(params) {
    _classCallCheck$1(this, Inline);

    this.id = randomId();
    this.transactions = [];
    this.isOpen = false;
    this.isLoaded = false;
    this.isDeprecatedApi = params && params.isDeprecatedApi; // track deprecatedApi
    if (params && params.isEmbed) {
      this.isEmbed = true;
    } else if (params && params.isPaymentRequest) {
      if (!(params.container && getPaymentRequestContainer(params.container))) this.handleError("A container is required to mount the payment request button");
      this.paymentRequestContainer = getPaymentRequestContainer(params.container);
      this.paymentRequestTransaction = null;
    }

    this.preCheckoutModal = null;
    this.backgroundIframe = mountBackgroundIframe(this.id);
    this.checkoutIframe = mountCheckoutIframe(this.id);
    this.registerListeners();
  }

  _createClass$1(Inline, [{
    key: 'registerListeners',
    value: function registerListeners() {
      var _this = this;

      window.addEventListener('message', function (event) {
        var isCheckoutIframe = event.origin + '/' === config.checkoutUrl;
        var isThisInline = _this.checkoutIframe && _this.checkoutIframe.contentWindow === event.source;
        var isEmbed = _this.isEmbed;
        if (isCheckoutIframe || isThisInline) {
          _this.respondToEvent(event);
        } else if (isEmbed) {
          _this.respondToEmbedEvents(event);
        }
      });
    }
  }, {
    key: 'checkout',
    value: function checkout(params) {
      if (!(deviceSupportsApplePay() && isIOS())) {
        this.newTransaction(params);
        return Promise.resolve(true);
      }

      if (this.activeTransaction()) this.activeTransaction().cancel();

      inlineInstance = this;
      var resumableTransaction = findResumableTransaction(this.transactions, params);
      var transaction = resumableTransaction || new InlineTransaction(params);

      return new Promise(function (resolve, reject) {
        transaction.requestInline().then(function (response) {
          var shouldLoadPreCheckoutModal = response.channels.includes("apple_pay");

          if (!shouldLoadPreCheckoutModal) {
            inlineInstance.newTransaction({ inlineTransaction: transaction });
            resolve(response);
          } else {
            inlineInstance.preloadTransaction({ inlineTransaction: transaction });

            inlineInstance.preCheckoutModal = mountPreCheckoutModal(inlineInstance.id);
            inlineInstance.paymentRequestContainer = getPreCheckoutModalPaymentRequestContainer(inlineInstance.preCheckoutModal);

            mountPaymentRequestButtons(inlineInstance.paymentRequestContainer, {
              channels: response.channels,
              styles: {
                applePay: {
                  width: "100%",
                  type: "plain",
                  height: "64px",
                  padding: '0px'
                }
              }
            }).then(function () {
              inlineInstance.registerPreCheckoutModalEventListeners();
              inlineInstance.registerPaymentRequestEventListeners();
              animatePreCheckoutModalIn(inlineInstance.preCheckoutModal);
              resolve(response);
            }).catch(function () {
              inlineInstance.closePreCheckoutModal();
              inlineInstance.animateCheckoutIn();
              resolve(response);
            });
          }
        }).catch(function (error) {
          transaction.onSetupError({ status: false, message: error.message });
          reject(error);
        });
      });
    }
  }, {
    key: 'registerPreCheckoutModalEventListeners',
    value: function registerPreCheckoutModalEventListeners() {
      var _this2 = this;

      var activeTransaction = this.activeTransaction();

      var handleClosePreCheckoutModal = function handleClosePreCheckoutModal(event) {
        if (event.target == _this2.preCheckoutModal) {
          inlineInstance.closePreCheckoutModal();
          if (activeTransaction) activeTransaction.cancel();
        }
      };

      document.addEventListener("touchend", handleClosePreCheckoutModal, true);

      var openPaystackPopButton = getPreCheckoutModalOpenPaystackPopButton(this.preCheckoutModal);
      openPaystackPopButton.onclick = function () {
        _this2.closePreCheckoutModal();
        _this2.animateCheckoutIn();
      };
    }
  }, {
    key: 'closePreCheckoutModal',
    value: function closePreCheckoutModal() {
      if (this.preCheckoutModal) {
        hidePreCheckoutModal(this.preCheckoutModal);
        this.preCheckoutModal.remove();
      }
    }
  }, {
    key: 'newTransaction',
    value: function newTransaction(_ref3) {
      var preload = _ref3.preload,
          inlineTransaction = _ref3.inlineTransaction,
          config$$1 = _objectWithoutProperties(_ref3, ['preload', 'inlineTransaction']);

      var hasPaymentRequestButtons = this.paymentRequestContainer && getApplePayButton(this.paymentRequestContainer);
      if (this.activeTransaction() && !hasPaymentRequestButtons) this.activeTransaction().cancel();

      var urlParameters = void 0;
      var resumableTransaction = findResumableTransaction(this.transactions, inlineTransaction ? inlineTransaction.parameters : config$$1);

      var transaction = resumableTransaction || inlineTransaction || new InlineTransaction(config$$1);

      if (resumableTransaction) {
        transaction.isActive = true;
        urlParameters = { accessCode: transaction.accessCode };
      } else {
        if (transaction.accessCode) {
          urlParameters = { accessCode: transaction.accessCode };
        } else {
          urlParameters = transaction.urlParameters;
        }
        this.transactions.push(transaction);
      }

      if (!this.isDeprecatedApi) {
        this.open(urlParameters, preload);
      }
      return transaction;
    }
  }, {
    key: 'preloadTransaction',
    value: function preloadTransaction(config$$1) {
      var _this3 = this;

      this.newTransaction(_extends$4({}, config$$1, { preload: true }));
      var loadPopup = function loadPopup() {
        return _this3.animateCheckoutIn();
      };
      return loadPopup;
    }
  }, {
    key: 'paymentRequest',
    value: function paymentRequest(parameters) {
      var container = parameters.container,
          styles = parameters.styles,
          onElementsMount = parameters.onElementsMount,
          transactionParams = _objectWithoutProperties(parameters, ['container', 'styles', 'onElementsMount']);

      inlineInstance = this;

      return new Promise(function (resolve, reject) {

        var loadPaystackCheckoutButton = document.querySelector('#' + parameters.loadPaystackCheckoutButton);

        if (!deviceSupportsApplePay()) {
          if (parameters && parameters.loadPaystackCheckoutButton) {
            if (loadPaystackCheckoutButton) {
              var loadPopup = inlineInstance.preloadTransaction(transactionParams);
              loadPaystackCheckoutButton.onclick = loadPopup;
            } else {
              logWarning("This device does not support any payment request wallet options. Please consult our documentation at https://developers.paystack.co/docs/paystack-inline to see how to load alternative payment options using 'loadPaystackCheckoutButton'");
            }
          }
          if (onElementsMount) onElementsMount(null);
          resolve(true);
          return;
        }

        if (inlineInstance.activeTransaction()) inlineInstance.activeTransaction().cancel();

        if (!(container && getPaymentRequestContainer(container))) {
          inlineInstance.handleError("A container is required to mount the payment request button");
        }
        inlineInstance.paymentRequestContainer = getPaymentRequestContainer(container);

        var resumableTransaction = findResumableTransaction(inlineInstance.transactions, transactionParams);
        var transaction = resumableTransaction || new InlineTransaction(transactionParams);

        transaction.requestInline().then(function (response) {
          mountPaymentRequestButtons(inlineInstance.paymentRequestContainer, {
            channels: response.channels,
            styles: styles
          }).then(function (mountedElements) {
            if (onElementsMount) onElementsMount(mountedElements);
          }).catch(function () {
            if (onElementsMount) onElementsMount(null);
          }).finally(function () {
            if (resumableTransaction) {
              transaction.isActive = true;
            } else {
              inlineInstance.transactions.push(transaction);
            }

            inlineInstance.registerPaymentRequestEventListeners();

            if (loadPaystackCheckoutButton) {
              var _loadPopup = inlineInstance.preloadTransaction({
                inlineTransaction: transaction
              });
              loadPaystackCheckoutButton.onclick = _loadPopup;
            }
            resolve(response);
          });
        }).catch(function (error) {
          transaction.onSetupError({ status: false, message: error.message });
          reject(error);
        });
      });
    }
  }, {
    key: 'registerApplePayEventListener',
    value: function registerApplePayEventListener() {
      var _this4 = this;

      var applePayButton = getApplePayButton(this.paymentRequestContainer);
      applePayButton.onclick = function () {
        return _this4.startApplePay();
      };
    }
  }, {
    key: 'registerPaymentRequestEventListeners',
    value: function registerPaymentRequestEventListeners() {
      var transaction = this.activeTransaction();

      if (transaction) {
        if (canUseApplePay(transaction.response.channels)) {
          this.registerApplePayEventListener();
        } else {
          removeAllChildNodes(this.paymentRequestContainer);
        }
      } else {
        removeAllChildNodes(this.paymentRequestContainer);
      }
    }
  }, {
    key: 'startApplePay',
    value: function startApplePay() {
      var paymentMethod = "apple pay";
      var transaction = this.activeTransaction();

      if (transaction) {
        try {
          transaction.logAttempt(paymentMethod);

          var applePayPaymentRequest = generateApplePaymentRequestObject({
            currency: transaction.response.currency,
            amount: transaction.response.amount,
            merchantName: transaction.response.merchant_name
          });

          var applePaySession = new window.ApplePaySession(config.applePayVersion, applePayPaymentRequest);

          applePaySession.onvalidatemerchant = function (_ref4) {
            var validationURL = _ref4.validationURL;


            var validateSession = validateApplePaySession({
              validationURL: validationURL,
              transactionId: transaction.id,
              merchantName: transaction.response.merchant_name
            });

            validateSession.then(function (response) {
              if (response.status !== "success") {
                transaction.onSetupError(response);
              } else {
                applePaySession.completeMerchantValidation(response.data);
              }
              transaction.logValidationResponse(response.message);
            }).catch(function (error) {
              transaction.onSetupError(error);
            });
          };

          applePaySession.oncancel = function () {
            if (!inlineInstance.preCheckoutModal) {
              transaction.onCancel();
            }
          };

          applePaySession.onpaymentauthorized = function (_ref5) {
            var payment = _ref5.payment;


            var charge = chargeApplePay({
              transactionId: transaction.id,
              payment: payment
            });
            charge.then(function (response) {
              transaction.logAPIResponse(response, paymentMethod);

              if (response.status === 'success') {
                applePaySession.completePayment(applePaySession.STATUS_SUCCESS);
                transaction.onSuccess(response);
              } else {
                applePaySession.completePayment(applePaySession.STATUS_FAILURE);
                transaction.onSetupError(response);
              }

              inlineInstance.closePreCheckoutModal();
            }).catch(function (error) {
              applePaySession.completePayment(applePaySession.STATUS_FAILURE);
              transaction.onSetupError(error);

              inlineInstance.closePreCheckoutModal();
            });
          };
          applePaySession.begin();
        } catch (error) {
          transaction.onSetupError(error);
        }
      } else {
        inlineInstance.handleError("Could not initiate apple pay transaction");
      }
    }
  }, {
    key: 'resumeTransaction',
    value: function resumeTransaction(accessCode) {
      return this.newTransaction({ accessCode: accessCode });
    }
  }, {
    key: 'activeTransaction',
    value: function activeTransaction() {
      var activeTransactions = this.transactions.filter(function (transaction) {
        return transaction.isActive;
      });
      var activeTransaction = activeTransactions.length ? activeTransactions[activeTransactions.length - 1] : null;
      return activeTransaction;
    }
  }, {
    key: 'cancelTransaction',
    value: function cancelTransaction(id) {
      var transaction = this.transactions.find(function (t) {
        return t.id === id;
      }) || this.activeTransaction();
      if (transaction) {
        transaction.cancel();
        this.close();
      }
    }
  }, {
    key: 'respondToEvent',
    value: function respondToEvent(event) {
      if (!event) return;
      var activeTransaction = this.activeTransaction();
      try {
        var actualEvent = event.data || event.message;
        var eventType = actualEvent.event,
            eventData = actualEvent.data;

        if (eventType) {
          switch (eventType) {
            case 'loaded:checkout':
              this.isLoaded = true;
              if (activeTransaction) {
                var checkoutIframe = this.checkoutIframe;
                var urlParameters = activeTransaction.urlParameters;

                notifyIframeToUpdateURL({
                  checkoutIframe: checkoutIframe,
                  urlParameters: urlParameters
                });
              }
              break;
            case 'loaded:transaction':
              hideLoader(this.backgroundIframe);
              activeTransaction.onLoad(eventData);
              break;
            case 'error':
              var error = eventData;
              if (error.type === 'setup') {
                activeTransaction.onSetupError(eventData);
              } else {
                activeTransaction.logError(eventData);
              }
              break;
            case 'cancel':
            case 'close':
              this.close();
              var status = eventData && eventData.status;
              if (status) activeTransaction.setStatus(status);

              var hasPaymentRequestButtons = this.paymentRequestContainer && getApplePayButton(this.paymentRequestContainer);
              var shouldSetCurrentTransactionAsInactive = !(hasPaymentRequestButtons && !this.preCheckoutModal);

              if (shouldSetCurrentTransactionAsInactive) {
                activeTransaction.isActive = false;
              }

              activeTransaction.onCancel();
              break;
            case 'transfer:pending':
              {
                this.close();
                var _status = eventData && eventData.status;
                if (_status) {
                  activeTransaction.setStatus(_status);
                }
                activeTransaction.onBankTransferConfirmationPending();
                break;
              }
            case 'success':
              this.close();
              activeTransaction.onSuccess(eventData);
              break;
            default:
              break;
          }
        }
      } catch (error) {
        // do nothing
      }
    }
  }, {
    key: 'respondToEmbedEvents',
    value: function respondToEmbedEvents(event) {
      var activeTransaction = this.activeTransaction();
      var eventData = event.data || event.message;

      if (eventData && (typeof eventData === 'string' || eventData instanceof String)) {
        var response = parseResponse(eventData);
        var oldCheckoutCloseResponse = response && response.action === 'PaystackClose';

        if (oldCheckoutCloseResponse) {
          var chargeResponse = response.data;

          if (chargeResponse) {
            activeTransaction.onSuccess(eventData);
          }
        }

        if (response.action == 'PaystackTLSClose') {
          activeTransaction.cancel();
        }
      }
    }
  }, {
    key: 'animateCheckoutIn',
    value: function animateCheckoutIn$$1() {
      var _this5 = this;

      if (!this.isOpen) {
        var checkoutIframe = this.checkoutIframe,
            backgroundIframe = this.backgroundIframe;

        animateCheckoutIn({ checkoutIframe: checkoutIframe, backgroundIframe: backgroundIframe }).then(function () {
          _this5.checkoutIframe.contentWindow.postMessage('render', '*');
        });
        this.isOpen = true;
      }
    }
  }, {
    key: 'open',
    value: function open(urlParameters, preload) {
      if (!urlParameters) return;
      var checkoutIframe = this.checkoutIframe;

      notifyIframeToUpdateURL({ checkoutIframe: checkoutIframe, urlParameters: urlParameters });
      if (!preload) {
        this.animateCheckoutIn();
      }
    }
  }, {
    key: 'close',
    value: function close() {
      var _this6 = this;

      if (!this.isOpen) return;
      var checkoutIframe = this.checkoutIframe,
          backgroundIframe = this.backgroundIframe;

      animateCheckoutOut({ checkoutIframe: checkoutIframe, backgroundIframe: backgroundIframe }).then(function () {
        _this6.checkoutIframe.contentWindow.postMessage('close', '*');
      });
      this.isOpen = false;
    }
  }, {
    key: 'isLoaded',
    value: function isLoaded() {
      return this.isLoaded;
    }
  }, {
    key: 'handleError',
    value: function handleError(message) {
      logWarning(message);
      throw new Error(message);
    }
  }], [{
    key: 'setup',
    value: function setup(parameters) {
      var isDeprecatedApi = true;
      var isEmbed = parameters && parameters.container;
      if (!inlineInstance) inlineInstance = new Inline({ isDeprecatedApi: isDeprecatedApi, isEmbed: isEmbed });
      printDeprecationNotice('PaystackPop.setup()', 'new PaystackPop()', 'Please consult our documentation at https://developers.paystack.co/docs/paystack-inline');
      var transaction = inlineInstance.newTransaction(parameters, 'deprecated');
      var urlParameters = transaction.urlParameters;

      if (isEmbed) {
        var inlineUrl = config.siteUrl + '/assets/payment/production/inline.html?' + serialize(urlParameters);
        var iframe = mountEmbedCheckoutIframe(inlineInstance.id, inlineUrl);
        appendIframeToContainer(parameters.container, iframe);
        iframe.onload = function () {
          iframe.contentWindow.postMessage('PaystackOpen ' + inlineInstance.id, '*');
          animateEmbedCheckoutIn(iframe);
        };
      } else {
        // attach openIframe method
        transaction.openIframe = function () {
          printDeprecationNotice('openIframe', 'open', 'Please consult our documentation at https://developers.paystack.co/docs/paystack-inline');
          inlineInstance.open(urlParameters);
        };
      }
      return transaction;
    }

    // TODO: Remove old payment request API

  }, {
    key: 'newPaymentRequest',
    value: function newPaymentRequest(parameters) {
      var container = parameters.container,
          styles = parameters.styles,
          onElementsMount = parameters.onElementsMount,
          onInlineTransactionRequestLoaded = parameters.onInlineTransactionRequestLoaded,
          transactionParams = _objectWithoutProperties(parameters, ['container', 'styles', 'onElementsMount', 'onInlineTransactionRequestLoaded']);

      paymentRequestInlineInstance = new Inline({ isPaymentRequest: true, container: container });
      Object.assign(paymentRequestInlineInstance, oldPaymentRequestApi);

      var transaction = new InlineTransaction(transactionParams);
      paymentRequestInlineInstance.paymentRequestTransaction = transaction;
      transaction.requestInline().then(function (response) {

        if (onInlineTransactionRequestLoaded) onInlineTransactionRequestLoaded(response);

        mountPaymentRequestButtons(paymentRequestInlineInstance.paymentRequestContainer, {
          channels: transaction.response.channels,
          styles: styles
        }).then(function (mountedElements) {
          if (onElementsMount) onElementsMount(mountedElements);
          paymentRequestInlineInstance.oldRegisterPaymentRequestEventListeners();
        }).catch(function () {
          if (onElementsMount) onElementsMount(null);
        });
      }).catch(function (error) {
        transaction.onSetupError({ status: false, message: error.message });
      });
    }
  }]);

  return Inline;
}();


if (scriptCanUseDataAttributes()) {
  var parameters = getDataAttributesAsParameters();
  var parentForm = getSourceScript().parentElement;
  if (!inlineInstance) inlineInstance = new Inline();
  var transaction = void 0;

  var inlineButton = mountLazyInlineButton({
    inlineId: inlineInstance.id,
    amount: parameters.amount / 100,
    currency: parameters.currency,
    id: parameters.buttonId,
    text: parameters.buttonText,
    variant: parameters.buttonVariant,
    wordmarkVariant: parameters.buttonWordmarkVariant,
    parent: getSourceScript()
  });

  inlineButton.addEventListener('click', function (e) {
    e.preventDefault();
    if (!transaction) {
      transaction = inlineInstance.newTransaction(_extends$4({}, parameters, {
        onSuccess: function onSuccess(response) {
          mountInput({
            type: 'hidden',
            name: 'reference',
            value: response.reference,
            parent: parentForm
          });
          parentForm.submit();
        }
      }));
    } else {
      inlineInstance.resumeTransaction(transaction.accessCode);
    }
  });
}

return Inline;

}());
